/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/actions.ts":
/*!************************!*\
  !*** ./src/actions.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ActionGenerator = void 0;\r\nclass ActionGenerator {\r\n    constructor(contract, token_contract) {\r\n        this.contract = contract;\r\n        this.token_contract = token_contract;\r\n        this.newaccount = (new_name, payer, newacc_public_active_key, newacc_public_owner_key) => ({\r\n            account: 'eosio',\r\n            name: 'newaccount',\r\n            authorization: [{\r\n                    actor: payer,\r\n                    permission: 'active',\r\n                }],\r\n            data: {\r\n                creator: payer,\r\n                name: new_name,\r\n                owner: {\r\n                    threshold: 1,\r\n                    keys: [{\r\n                            key: newacc_public_owner_key,\r\n                            weight: 1\r\n                        }],\r\n                    accounts: [],\r\n                    waits: []\r\n                },\r\n                active: {\r\n                    threshold: 1,\r\n                    keys: [{\r\n                            key: newacc_public_active_key,\r\n                            weight: 1\r\n                        }],\r\n                    accounts: [],\r\n                    waits: []\r\n                },\r\n            }\r\n        });\r\n        this.buyrambytes = (receiver, payer = 'io', amt = 8192) => ({\r\n            account: 'eosio',\r\n            name: 'buyrambytes',\r\n            authorization: [{ actor: payer, permission: 'active' }],\r\n            data: {\r\n                payer: payer,\r\n                receiver: receiver,\r\n                bytes: amt,\r\n            },\r\n        });\r\n        this.delegateBw = (receiver, payer = 'io', net_amount = '100.0000 NCO', cpu_amount = '100.0000 NCO', trfer = true) => ({\r\n            account: 'eosio',\r\n            name: 'delegatebw',\r\n            authorization: [{\r\n                    actor: payer,\r\n                    permission: 'active',\r\n                }],\r\n            data: {\r\n                from: payer,\r\n                receiver: receiver,\r\n                stake_net_quantity: net_amount,\r\n                stake_cpu_quantity: cpu_amount,\r\n                transfer: trfer,\r\n            }\r\n        });\r\n        /*createUser = async (\r\n          newUser: string,\r\n          payer: string,\r\n          public_active_key: string,\r\n          public_owner_key: string\r\n        ) => {\r\n        \r\n          let newacc_action = this._newaccount(newUser, payer, public_active_key, public_owner_key);\r\n          let buyram_action = this._buyrambytes(newUser, payer);\r\n          let delegatebw_action = this._delegateBw(newUser, payer);\r\n        \r\n          return [newacc_action, buyram_action, delegatebw_action]\r\n        };\r\n        \r\n        createAccount(\r\n          authorization: EosioAuthorizationObject[],\r\n          owner: string,\r\n          symbol: string,\r\n          payer: string\r\n        ) {\r\n          return this._pack(this.contract, authorization, \"open\", {\r\n            owner,\r\n            symbol,\r\n            payer\r\n          });\r\n        }*/\r\n        this.createCollection = (author, collection_name, authorized_accounts, notify_accounts = [], market_fee, allow_notify) => {\r\n            const action = {\r\n                account: 'atomicassets',\r\n                name: 'createcol',\r\n                data: {\r\n                    author: author,\r\n                    collection_name: collection_name,\r\n                    allow_notify: allow_notify,\r\n                    authorized_accounts: authorized_accounts,\r\n                    notify_accounts: notify_accounts,\r\n                    market_fee: market_fee,\r\n                    data: []\r\n                },\r\n                authorization: [\r\n                    { actor: author, permission: 'active' }\r\n                ]\r\n            };\r\n            return action;\r\n        };\r\n        this.createSchema = (author, payer, collection_name, schema_name, sch) => {\r\n            const action = {\r\n                account: 'atomicassets',\r\n                name: 'createschema',\r\n                data: {\r\n                    authorized_creator: author,\r\n                    collection_name: collection_name,\r\n                    schema_name: schema_name,\r\n                    schema_format: sch\r\n                },\r\n                authorization: [\r\n                    { actor: author, permission: 'active' }\r\n                ]\r\n            };\r\n            return action;\r\n        };\r\n        this.createTemplate = (author, collection_name, schema_name, xferable, burnable, max_supply, template_fields) => {\r\n            const action = {\r\n                account: 'atomicassets',\r\n                name: 'createtempl',\r\n                data: {\r\n                    authorized_creator: author,\r\n                    collection_name: collection_name,\r\n                    schema_name: schema_name,\r\n                    transferable: xferable,\r\n                    burnable: burnable,\r\n                    max_supply: 0xffffff,\r\n                    immutable_data: template_fields //{key: 'name', value: ['string', 'default'] } ]\r\n                },\r\n                authorization: [\r\n                    { actor: author, permission: 'active' }\r\n                ]\r\n            };\r\n            return action;\r\n        };\r\n        this.createPermission = (author, perm_name, perm_key) => {\r\n            const authorization_object = {\r\n                threshold: 1,\r\n                accounts: [{ permission: { actor: author, permission: 'active' }, weight: 1 }],\r\n                keys: [{ key: perm_key, weight: 1 }],\r\n                waits: []\r\n            };\r\n            const updateauth_input = {\r\n                account: author,\r\n                permission: perm_name,\r\n                parent: 'active',\r\n                auth: authorization_object\r\n            };\r\n            const action = {\r\n                account: 'eosio',\r\n                name: 'updateauth',\r\n                data: updateauth_input,\r\n                authorization: [\r\n                    { actor: author, permission: 'active' }\r\n                ]\r\n            };\r\n            return action;\r\n        };\r\n        this.mintAsset = (author, payer, col_name, sch_name, tmpl_id, immutable_data, mutable_data) => {\r\n            const action = {\r\n                account: 'atomicassets',\r\n                name: 'mintasset',\r\n                data: {\r\n                    authorized_minter: author,\r\n                    collection_name: col_name,\r\n                    schema_name: sch_name,\r\n                    template_id: tmpl_id,\r\n                    new_asset_owner: author,\r\n                    immutable_data: immutable_data,\r\n                    mutable_data: mutable_data,\r\n                    tokens_to_back: [] //tokens to back \r\n                },\r\n                authorization: [\r\n                    { actor: author, permission: 'active' }\r\n                ]\r\n            };\r\n            return action;\r\n        };\r\n        this.createPool = (creator, ticker, is_inflatable, is_deflatable, is_treasury, descr) => {\r\n            const action = {\r\n                account: 'pools2.nco',\r\n                name: 'createpool',\r\n                data: {\r\n                    owner: creator,\r\n                    ticker: ticker,\r\n                    description: descr,\r\n                    is_inflatable: is_inflatable,\r\n                    is_deflatable: is_deflatable,\r\n                    is_treasury: is_treasury\r\n                },\r\n                authorization: [\r\n                    { actor: creator, permission: 'active' }\r\n                ]\r\n            };\r\n            return action;\r\n        };\r\n        this.txNcoBalance = (from, to, amt, memo) => {\r\n            const action = {\r\n                account: 'eosio.token',\r\n                name: 'transfer',\r\n                data: {\r\n                    from: from,\r\n                    to: to,\r\n                    quantity: amt,\r\n                    memo: memo //''\r\n                },\r\n                authorization: [\r\n                    { 'actor': from, 'permission': 'active' }\r\n                ]\r\n            };\r\n            return action;\r\n        };\r\n        this.txBalance = (contract, from, to, amt, memo) => {\r\n            const action = {\r\n                account: contract,\r\n                name: 'transfer',\r\n                data: {\r\n                    from: from,\r\n                    to: to,\r\n                    quantity: amt,\r\n                    memo: memo //''\r\n                },\r\n                authorization: [\r\n                    { 'actor': from, 'permission': 'active' }\r\n                ]\r\n            };\r\n            return action;\r\n        };\r\n    }\r\n    _pack(account, authorization, name, data) {\r\n        return [{ account, name, authorization, data }];\r\n    }\r\n}\r\nexports.ActionGenerator = ActionGenerator;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/actions.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NCO_BlockchainAPI = exports.devnet_services = exports.devnet_urls = void 0;\r\n// EOS imports\r\nconst eosjs_1 = __webpack_require__(/*! eosjs */ \"eosjs\");\r\nconst eosjs_jssig_1 = __webpack_require__(/*! eosjs/dist/eosjs-jssig */ \"eosjs/dist/eosjs-jssig\"); // development only\r\n// @ts-ignore\r\nconst eosjs_ecc_priveos_1 = __importDefault(__webpack_require__(/*! eosjs-ecc-priveos */ \"eosjs-ecc-priveos\"));\r\n// Extra backend services\r\nconst hyperion_1 = __webpack_require__(/*! @eoscafe/hyperion */ \"@eoscafe/hyperion\");\r\nconst atomicassets_1 = __webpack_require__(/*! atomicassets */ \"atomicassets\");\r\n// Newcoin services  \r\nconst newcoin_pools_js_1 = __webpack_require__(/*! @newcoin-foundation/newcoin.pools-js/ */ \"@newcoin-foundation/newcoin.pools-js/\");\r\nconst src_1 = __webpack_require__(/*! ../../newcoin.pool-js/src */ \"../newcoin.pool-js/src/index.ts\");\r\nconst newcoin_pool_js_1 = __webpack_require__(/*! @newcoin-foundation/newcoin.pool-js */ \"@newcoin-foundation/newcoin.pool-js\");\r\nconst newcoin_daos_js_1 = __webpack_require__(/*! @newcoin-foundation/newcoin.daos-js */ \"@newcoin-foundation/newcoin.daos-js\");\r\nconst actions_1 = __webpack_require__(/*! ./actions */ \"./src/actions.ts\");\r\n// @ts-ignore\r\nconst node_fetch = __importStar(__webpack_require__(/*! node-fetch */ \"node-fetch\"));\r\nconst cross_fetch_1 = __importDefault(__webpack_require__(/*! cross-fetch */ \"cross-fetch\"));\r\n//import * as types from \"./types\";\r\nconst types_1 = __webpack_require__(/*! ./types */ \"./src/types.ts\");\r\n__exportStar(__webpack_require__(/*! ./types */ \"./src/types.ts\"), exports);\r\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nconst CREATE_ACCOUNT_DEFAULTS = {\r\n    ram_amt: 8192,\r\n    cpu_amount: '100.0000 NCO',\r\n    net_amount: '100.0000 NCO',\r\n    xfer: false,\r\n};\r\n/**\r\n * The primary tool to interact with [https://newcoin.org](newcoin.org).\r\n *\r\n * This is an early alpha.\r\n *\r\n * See [https://docs.newcoin.org/](https://docs.newcoin.org/) for an overview of the newcoin ecosystem.\r\n */\r\nexports.devnet_urls = {\r\n    nodeos_url: \"https://nodeos-dev.newcoin.org\",\r\n    hyperion_url: \"https://hyperion-dev.newcoin.org\",\r\n    atomicassets_url: \"https://atomic-dev.newcoin.org/\"\r\n};\r\nexports.devnet_services = {\r\n    eosio_contract: \"eosio\",\r\n    token_contract: \"eosio.token\",\r\n    maindao_contract: \"pool.nco\",\r\n    staking_contract: \"pools2.nco\",\r\n    daos_contract: \"daos.nco\"\r\n};\r\nclass NCO_BlockchainAPI {\r\n    /**\r\n     * Init the api\r\n     * @name newcoin-api\r\n     * @param urls\r\n     * @param services\r\n     * @returns a Newcoin API instance\r\n     */\r\n    constructor(urls, services) {\r\n        this.dao_id = \"0\";\r\n        this.pool_id = \"0\";\r\n        this.pool_code = \"\";\r\n        this._url = urls.nodeos_url;\r\n        this._h_url = urls.hyperion_url;\r\n        this._aa_url = urls.atomicassets_url;\r\n        this.aa_api = new atomicassets_1.ExplorerApi(this._aa_url, \"atomicassets\", { fetch: node_fetch });\r\n        this.nodeos_rpc = new eosjs_1.JsonRpc(this._url, { fetch: cross_fetch_1.default });\r\n        this.hrpc = new hyperion_1.JsonRpc(this._h_url, { fetch: cross_fetch_1.default });\r\n        this.cApi = new newcoin_daos_js_1.ChainApi(this._url, services.daos_contract, cross_fetch_1.default);\r\n        this.poolsRpcApi = new newcoin_pools_js_1.RpcApi(this._url, services.staking_contract, cross_fetch_1.default);\r\n        this.poolRpcApi = new newcoin_pool_js_1.RpcApi(this._url, services.maindao_contract, cross_fetch_1.default);\r\n        this.aGen = new newcoin_daos_js_1.ActionGenerator(services.daos_contract, services.token_contract);\r\n        this.mGen = new src_1.ActionGenerator(services.maindao_contract, services.token_contract);\r\n        this.pGen = new newcoin_pools_js_1.ActionGenerator(services.staking_contract, services.maindao_contract);\r\n        this.sdkGen = new actions_1.ActionGenerator(services.eosio_contract, services.token_contract);\r\n        this._services = services;\r\n    }\r\n    /**\r\n     * Create a key pair assuming a secure environment (not frontend)\r\n     * @returns A key pair\r\n     */\r\n    createKeyPair() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield eosjs_ecc_priveos_1.default.initialize();\r\n            let opts = { secureEnv: true };\r\n            let p = yield eosjs_ecc_priveos_1.default.randomKey(0, opts);\r\n            //let x = ecc.isValidPrivate(p);\r\n            let t = { prv_key: p, pub_key: eosjs_ecc_priveos_1.default.privateToPublic(p) };\r\n            return t;\r\n        });\r\n    }\r\n    /**\r\n     * Create a user\r\n     * @returns Create User transaction id\r\n     */\r\n    createUser(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { newUser, newacc_pub_active_key, newacc_pub_owner_key, payer, payer_prv_key, ram_amt, net_amount, cpu_amount, xfer } = Object.assign(Object.assign({}, CREATE_ACCOUNT_DEFAULTS), inpt);\r\n            let t;\r\n            let res = {};\r\n            let tres;\r\n            let newacc_action = this.sdkGen.newaccount(newUser, payer, newacc_pub_active_key, newacc_pub_owner_key);\r\n            let buyram_action = this.sdkGen.buyrambytes(newUser, payer, ram_amt);\r\n            let delegatebw_action = this.sdkGen.delegateBw(newUser, payer, net_amount, cpu_amount, xfer);\r\n            let payer_pub_key = eosjs_ecc_priveos_1.default.privateToPublic(payer_prv_key);\r\n            console.log(\"before create account transaction\");\r\n            tres = (yield this.SubmitTx([newacc_action, buyram_action, delegatebw_action], [payer_pub_key], [payer_prv_key])); // [] contained      \r\n            res.TxID_createAcc = tres.transaction_id;\r\n            console.log(\"createuser transaction complete\");\r\n            return res;\r\n        });\r\n    }\r\n    /**\r\n     * Create collection\r\n     * @returns Create Collection and template transactions' ids\r\n     */\r\n    createCollection(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let t;\r\n            let res = {};\r\n            let tres;\r\n            let d = 12 - inpt.user.length;\r\n            if (inpt.collection_name == undefined)\r\n                inpt.collection_name = (0, utils_1.normalizeUsername)(inpt.user, \"z\"); //(inpt.creator).replace('.', 'z' + 'z'.repeat(d));\r\n            if (inpt.schema_name == undefined)\r\n                inpt.schema_name = (0, utils_1.normalizeUsername)(inpt.user, \"w\"); // (inpt.creator).replace('.', 'w' + 'w'.repeat(d));\r\n            let user_public_active_key = eosjs_ecc_priveos_1.default.privateToPublic(inpt.user_prv_active_key);\r\n            let mkt_fee = inpt.mkt_fee ? inpt.mkt_fee : 0.05;\r\n            let allow_notify = inpt.allow_notify ? inpt.allow_notify : true;\r\n            t = this.sdkGen.createCollection(inpt.user, inpt.collection_name, [inpt.user], [inpt.user], mkt_fee, allow_notify);\r\n            console.log(t);\r\n            console.log(\"createcol transaction\");\r\n            tres = (yield this.SubmitTx([t], [user_public_active_key], [inpt.user_prv_active_key]));\r\n            res.TxID_createCol = tres.transaction_id;\r\n            console.log(\"creating schema\");\r\n            let schema_fields = inpt.schema_fields ? inpt.schema_fields : types_1.default_schema;\r\n            t = this.sdkGen.createSchema(inpt.user, inpt.user, inpt.collection_name, inpt.schema_name, schema_fields);\r\n            console.log(t);\r\n            console.log(\"createsch transaction\");\r\n            tres = (yield this.SubmitTx([t], [user_public_active_key], [inpt.user_prv_active_key]));\r\n            res.TxID_createSch = tres.transaction_id;\r\n            console.log(\"creating template\");\r\n            let template = inpt.template_fields ? inpt.template_fields : [];\r\n            let xferable = inpt.xferable ? inpt.xferable : true;\r\n            let burnable = inpt.burnable ? inpt.burnable : true;\r\n            let max_supply = inpt.max_supply ? inpt.max_supply : 0xffffff;\r\n            t = this.sdkGen.createTemplate(inpt.user, inpt.collection_name, inpt.schema_name, xferable, burnable, max_supply, template);\r\n            console.log(t);\r\n            console.log(\"creating template transaction\");\r\n            tres = (yield this.SubmitTx([t], [user_public_active_key], [inpt.user_prv_active_key]));\r\n            res.TxID_createTpl = res.TxID_createTpl;\r\n            return res;\r\n        });\r\n    }\r\n    /**\r\n     * Create a new permission subject to Active permission.\r\n     * @returns Create permission transaction id\r\n     */\r\n    createPermission(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let t = this.sdkGen.createPermission(inpt.author, inpt.perm_name, inpt.perm_pub_key);\r\n            let res = yield this.SubmitTx([t], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.author_prv_active_key)], [inpt.author_prv_active_key]);\r\n            let r = {};\r\n            r.TxID_createPerm = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * Link a permission to a specific action of a specific contract.\r\n     * @returns Link permission transaction id\r\n     */\r\n    linkPermission(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const linkauth_input = {\r\n                account: inpt.author,\r\n                code: inpt.action_owner,\r\n                type: inpt.action_to_link,\r\n                requirement: inpt.perm_to_link, // 'active', 'owner' ... \r\n            };\r\n            // the action which will make the linking \r\n            let action = {\r\n                account: 'eosio',\r\n                name: 'linkauth',\r\n                data: linkauth_input,\r\n                authorization: [{\r\n                        actor: inpt.author,\r\n                        permission: 'active'\r\n                    }]\r\n            };\r\n            let res = yield this.SubmitTx([action], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.author_prv_active_key)], [inpt.author_prv_active_key]);\r\n            let r = {};\r\n            r.TxID_linkPerm = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * Create a staking pool for an account\r\n     * @returns Create Pool transaction id\r\n     */\r\n    createPool(inpt) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            inpt.ticker = (inpt.ticker || inpt.owner.substring(0, 3)).toUpperCase();\r\n            (_a = inpt.is_inflatable) !== null && _a !== void 0 ? _a : (inpt.is_inflatable = true);\r\n            (_b = inpt.is_deflatable) !== null && _b !== void 0 ? _b : (inpt.is_deflatable = true);\r\n            (_c = inpt.is_treasury) !== null && _c !== void 0 ? _c : (inpt.is_treasury = false);\r\n            console.log(\"Creating pool: \" + JSON.stringify(inpt));\r\n            let t = this.sdkGen.createPool(inpt.owner, inpt.ticker, inpt.is_inflatable, inpt.is_deflatable, inpt.is_treasury, \"test pool for \" + inpt.owner);\r\n            let res = yield this.SubmitTx([t], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.owner_prv_active_key)], [inpt.owner_prv_active_key]);\r\n            let r = {};\r\n            r.TxID_createPool = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * Stake mainDAO\r\n     * @param inpt\r\n     * @returns\r\n     */\r\n    stakeMainDAO(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let r = {};\r\n            const stakeTx = yield this.mGen.stake([{ actor: inpt.payer, permission: \"active\" }], inpt.payer, inpt.amt);\r\n            console.log(\"action: \" + JSON.stringify(stakeTx));\r\n            const res = yield this.SubmitTx(stakeTx, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\r\n            r.TxID_stakeMainDAO = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n    * inst UnStake mainDAO\r\n    * @param inpt\r\n    * @returns\r\n    */\r\n    instUnstakeMainDAO(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let r = {};\r\n            const stakeTx = yield this.mGen.instunstake([{ actor: inpt.payer, permission: \"active\" }], inpt.payer, inpt.amt);\r\n            console.log(\"action: \" + JSON.stringify(stakeTx));\r\n            const res = yield this.SubmitTx(stakeTx, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\r\n            r.TxID_unstakeMainDAO = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * delayed UnStake mainDAO\r\n     * @param inpt\r\n     * @returns\r\n     */\r\n    dldUnstakeMainDAO(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let r = {};\r\n            const stakeTx = yield this.mGen.dldunstake([{ actor: inpt.payer, permission: \"active\" }], inpt.payer, inpt.amt);\r\n            console.log(\"action: \" + JSON.stringify(stakeTx));\r\n            const res = yield this.SubmitTx(stakeTx, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\r\n            r.TxID_unstakeMainDAO = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * Stake to pool\r\n     * @returns Create Pool transaction id\r\n     */\r\n    stakePool(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let p = { owner: inpt.owner };\r\n            let r = {};\r\n            console.log(\"Get poolbyowner: \", JSON.stringify(p));\r\n            let q = yield this.poolsRpcApi.getPoolByOwner(p);\r\n            let t = yield q.json();\r\n            this.pool_id = t.rows[0].id;\r\n            this.pool_code = t.rows[0].code;\r\n            console.log(\"pool:\" + JSON.stringify(t));\r\n            const stakeTx = yield this.pGen.stakeToPool([{ actor: inpt.payer, permission: \"active\" },\r\n                { actor: \"io\", permission: \"active\" }], inpt.payer, inpt.amt, this.pool_id);\r\n            console.log(\"action: \" + JSON.stringify(stakeTx));\r\n            const res = yield this.SubmitTx(stakeTx, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\r\n            r.TxID_stakePool = res.transaction_id;\r\n            r.pool_id = this.pool_id;\r\n            r.pool_code = this.pool_code;\r\n            return r;\r\n        });\r\n    }\r\n    unstakePool(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const t = yield this.pGen.withdrawFromPool([{ actor: inpt.payer, permission: \"active\" }], //{ actor: \"io\", permission: \"active\"}\r\n            inpt.payer, inpt.amt);\r\n            console.log(\"action: \" + JSON.stringify(t));\r\n            const res = yield this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\r\n            let r = {};\r\n            r.TxID_unstakePool = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    addToWhiteList(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            //const aGen = new PoolsActionGenerator(\"pools2.nco\", \"eosio.token\");\r\n            /*const t = await this.aGen.createWhiteListProposal(\r\n              [{ actor: inpt.owner, permission: \"active\" }],\r\n              ~~inpt.dao_id,\r\n              inpt.account);\r\n        \r\n            const res = await this.SubmitTx(t,\r\n              [ecc.privateToPublic(inpt.owner_prv_key)], [inpt.owner_prv_key]) as TransactResult;\r\n          */\r\n            let r = {};\r\n            r.TxID_addToWhiteList = \"0\"; //res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    removeFromWhiteList(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            //const aGen = new PoolsActionGenerator(\"pools2.nco\", \"eosio.token\");\r\n            //const t = await pGen.removeFromWhiteList(\r\n            //  [{ actor: inpt.owner, permission: \"active\"}],\r\n            //  inpt.pool_id,\r\n            //  inpt.owner);\r\n            //const res = await SubmitTx(t, \r\n            //  [ecc.privateToPublic(inpt.owner_prv_key)], [inpt.owner_prv_key], \r\n            //  this._url) as TransactResult;\r\n            let r = {};\r\n            //r.TxID_removeFromWhiteList = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    createDao(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const t = yield this.aGen.createDao([{ actor: inpt.author, permission: \"active\" }], inpt.author, inpt.descr);\r\n            const res = yield this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.authpr_prv_key)], [inpt.authpr_prv_key]);\r\n            let p = { owner: inpt.author };\r\n            console.log(\"Get dao by owner: \", JSON.stringify(p));\r\n            let q = yield this.cApi.getDAOByOwner(p);\r\n            let w = yield q.json();\r\n            console.log(\"received from getDaoByOwner\" + JSON.stringify(w));\r\n            let r = {};\r\n            r.TxID_createDao = res.transaction_id;\r\n            r.dao_id = w.rows[0].id;\r\n            this.dao_id = r.dao_id.toString();\r\n            return r;\r\n        });\r\n    }\r\n    createDaoProposal(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (inpt.dao_id == undefined) {\r\n                if (inpt.dao_owner == undefined)\r\n                    throw (\"DAO undefined\");\r\n                let p = { owner: inpt.dao_owner };\r\n                console.log(\"Get dao by owner: \", JSON.stringify(p));\r\n                let q = yield this.cApi.getDAOByOwner(p);\r\n                let w = yield q.json();\r\n                console.log(\"received from getDaoByOwner\" + JSON.stringify(w));\r\n                inpt.dao_id = w.rows[0].id;\r\n            }\r\n            const t = yield this.aGen.createProposal([{ actor: inpt.proposer, permission: \"active\" }], inpt.proposer, inpt.dao_id, inpt.title, inpt.summary, inpt.url, inpt.vote_start, inpt.vote_end);\r\n            const res = yield this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.proposer_prv_key)], [inpt.proposer_prv_key]);\r\n            let r = {};\r\n            r.TxID_createDaoProposal = res.transaction_id;\r\n            r.dao_id = inpt.dao_id;\r\n            return r;\r\n        });\r\n    }\r\n    approveDaoProposal(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (inpt.dao_id == undefined) {\r\n                if (inpt.dao_owner == undefined)\r\n                    throw (\"DAO undefined\");\r\n                let p = { owner: inpt.dao_owner };\r\n                console.log(\"Get dao by owner: \", JSON.stringify(p));\r\n                let q = yield this.cApi.getDAOByOwner(p);\r\n                let w = yield q.json();\r\n                console.log(\"received from getDaoByOwner\" + JSON.stringify(w));\r\n                inpt.dao_id = w.rows[0].id;\r\n            }\r\n            if (inpt.proposal_id == undefined) {\r\n                if (inpt.proposal_author == undefined)\r\n                    throw (\"Proposal undefined neither ID nor name\");\r\n                let p = {\r\n                    daoID: inpt.dao_id.toString(),\r\n                    proposer: inpt.proposal_author\r\n                };\r\n                console.log(\"Get proposal by author: \", JSON.stringify(p));\r\n                let q = yield this.cApi.getProposalByProposer(p);\r\n                let w = yield q.json();\r\n                console.log(\"received from getProposalByOwner\" + JSON.stringify(w));\r\n                inpt.proposal_id = w.rows[0].id;\r\n            }\r\n            const t = yield this.aGen.approveProposal([{ actor: inpt.approver, permission: \"active\" }], inpt.dao_id, inpt.proposal_id);\r\n            const res = yield this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.approver_prv_key)], [inpt.approver_prv_key]);\r\n            let r = {};\r\n            r.TxID_approveDaoProposal = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    executeDaoProposal(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (inpt.dao_id == undefined) {\r\n                if (inpt.dao_owner == undefined)\r\n                    throw (\"DAO undefined\");\r\n                let q = yield this.cApi.getDAOByOwner({ owner: inpt.dao_owner });\r\n                let w = yield q.json();\r\n                console.log(\"received from getDaoByOwner\" + JSON.stringify(w));\r\n                inpt.dao_id = w.rows[0].id;\r\n            }\r\n            if (inpt.proposal_id == undefined) {\r\n                if (inpt.proposal_author == undefined)\r\n                    throw (\"Proposal undefined neither ID nor name\");\r\n                let p = {\r\n                    daoID: inpt.dao_id.toString(),\r\n                    proposer: inpt.proposal_author\r\n                };\r\n                console.log(\"Get proposal by author: \", JSON.stringify(p));\r\n                let q = yield this.cApi.getProposalByProposer(p);\r\n                let w = yield q.json();\r\n                console.log(\"received from getProposalByOwner\" + JSON.stringify(w));\r\n                inpt.proposal_id = w.rows[0].id;\r\n            }\r\n            const t = yield this.aGen.executeProposal([{ actor: inpt.exec, permission: \"active\" }], inpt.dao_id, inpt.proposal_id);\r\n            const res = yield this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.exec_prv_key)], [inpt.exec_prv_key]);\r\n            let r = {};\r\n            r.TxID_executeDaoProposal = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    getDaoProposals(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (inpt.dao_id == undefined) {\r\n                if (inpt.dao_owner == undefined)\r\n                    return {};\r\n                let q = yield this.cApi.getDAOByOwner({ owner: inpt.dao_owner });\r\n                let w = yield q.json();\r\n                console.log(\"received from getDaoByOwner\" + JSON.stringify(w));\r\n                inpt.dao_id = (w.rows[0].id).toString();\r\n            }\r\n            if (inpt.proposal_id == undefined) {\r\n                const opt = { daoID: inpt.dao_id, proposer: inpt.proposal_author };\r\n                let q = yield this.cApi.getProposalByProposer(opt);\r\n                let w = yield q.json();\r\n                console.log(\"received from getProposalbyProposer\" + JSON.stringify(w));\r\n                inpt.proposal_id = (w.rows[0].id).toString();\r\n            }\r\n            console.log(\"Get proposals for dao \", JSON.stringify(inpt.dao_id));\r\n            let q = yield this.cApi.getProposalByID({ daoID: inpt.dao_id, id: inpt.proposal_id });\r\n            let w = yield q.json();\r\n            console.log(\"received from getProposalByID\" + JSON.stringify(w.rows));\r\n            return w.rows;\r\n        });\r\n    }\r\n    voteOnDaoProposal(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            console.log(\"Vote for DAO proposal\", JSON.stringify(inpt.dao_id));\r\n            const t = yield this.aGen.vote([{ actor: inpt.voter, permission: \"active\" }], inpt.voter, inpt.quantity, inpt.proposal_type || \"standart\", inpt.dao_id, inpt.proposal_id, inpt.option);\r\n            // let w = await q.json();\r\n            const res = yield this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.voter_prv_key)], [inpt.voter_prv_key]);\r\n            console.log(\"received from VoteForDaoProposal\" + JSON.stringify(res));\r\n            return { TxID_voteForDaoProposal: res.transaction_id };\r\n        });\r\n    }\r\n    /**\r\n     * Mint an asset\r\n     * @returns Create Pool transaction id\r\n     */\r\n    mintAsset(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let d = 12 - inpt.creator.length;\r\n            if (inpt.col_name == undefined)\r\n                inpt.col_name = (0, utils_1.normalizeUsername)(inpt.creator, \"z\");\r\n            if (inpt.sch_name == undefined)\r\n                inpt.sch_name = (0, utils_1.normalizeUsername)(inpt.creator, \"w\");\r\n            if (inpt.tmpl_id == undefined)\r\n                inpt.tmpl_id = -1;\r\n            if (inpt.immutable_data == undefined)\r\n                inpt.immutable_data = [\r\n                    { key: 'name', value: ['string', inpt.creator + '_' + (new Date()).getTime()] }\r\n                ];\r\n            if (inpt.mutable_data == undefined)\r\n                inpt.mutable_data = [];\r\n            const t = this.sdkGen.mintAsset(inpt.creator, inpt.payer, inpt.col_name, inpt.sch_name, inpt.tmpl_id, inpt.immutable_data, inpt.mutable_data);\r\n            let res = yield this.SubmitTx([t], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\r\n            let r = {};\r\n            r.TxID_mintAsset = res.transaction_id;\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n     * Get trasaction data\r\n     * @returns Tx data\r\n     */\r\n    getTxData(txid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let txi = yield this.hrpc.get_transaction(txid);\r\n            console.log(txi); // get template number  txi.actions[1].act.data.template_id\r\n            return txi;\r\n        });\r\n    }\r\n    /**\r\n     * Get account balance\r\n     * @returns Tx data\r\n     */\r\n    getAccountBalance(acc) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (acc.contract == undefined)\r\n                acc.contract = 'eosio.token';\r\n            let rc = { acc_balances: [] };\r\n            try {\r\n                let t = yield (0, cross_fetch_1.default)(`https://nodeos-dev.newcoin.org/v1/chain/get_currency_balance`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        account: acc.owner,\r\n                        code: acc.contract\r\n                    }),\r\n                });\r\n                rc.acc_balances = yield t.json();\r\n                //console.log(rc);\r\n                return rc;\r\n            }\r\n            catch (e) {\r\n                console.log('\\nCaught exception: ' + e);\r\n                if (e instanceof eosjs_1.RpcError)\r\n                    console.log(JSON.stringify(e.json, null, 2));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Transfer NCO between accounts\r\n     * @returns Transfer transaction id\r\n     */\r\n    _txBalance(contract, inpt, memo = \"\") {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let r = {};\r\n            let tx = this.sdkGen.txBalance(contract, inpt.payer, inpt.to, inpt.amt, memo);\r\n            let res = yield this.SubmitTx([tx], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\r\n            r.TxID = res.transaction_id;\r\n            //console.log(res);\r\n            return r;\r\n        });\r\n    }\r\n    txGNCOBalance(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const r = yield this._txBalance(this._services.maindao_contract, inpt);\r\n            return r.TxID;\r\n        });\r\n    }\r\n    txNCOBalance(inpt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const r = yield this._txBalance(this._services.token_contract, inpt);\r\n            return r.TxID;\r\n        });\r\n    }\r\n    /**\r\n     * Transfer NCO between accounts\r\n     * @returns Transfer transaction id\r\n     */\r\n    txNcoBalance(inpt) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let r = {};\r\n            let tx = this.sdkGen.txNcoBalance(inpt.payer, inpt.to, inpt.amt, (_a = inpt.memo) !== null && _a !== void 0 ? _a : (inpt.memo = \"\"));\r\n            let res = yield this.SubmitTx([tx], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\r\n            r.TxID_txNcoBalance = res.transaction_id;\r\n            //console.log(res);\r\n            return r;\r\n        });\r\n    }\r\n    /**\r\n   * Get pool info\r\n   * @returns Tx data\r\n   */\r\n    getPoolInfo(payload) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const api = new newcoin_pools_js_1.RpcApi(\"https://nodeos-dev.newcoin.org\", \"pools2.nco\", cross_fetch_1.default);\r\n            try {\r\n                const fn = payload.code ? \"getPoolByCode\" : \"getPoolByOwner\";\r\n                let q = yield api[fn](payload);\r\n                let t = yield q.json();\r\n                //console.log(t.rows[0]);\r\n                //console.log(t.rows[0].total);\r\n                return t;\r\n            }\r\n            catch (e) {\r\n                console.log('\\nCaught exception: ' + e);\r\n                if (e instanceof eosjs_1.RpcError)\r\n                    console.log(JSON.stringify(e.json, null, 2));\r\n            }\r\n            return {};\r\n            ``;\r\n        });\r\n    }\r\n    SubmitTx(actions, public_keys, // testnet [\"EOS5PU92CupzxWEuvTMcCNr3G69r4Vch3bmYDrczNSHx5LbNRY7NT\"]\r\n    private_keys // testnet [\"5KdRwMUrkFssK2nUXASnhzjsN1rNNiy8bXAJoHYbBgJMLzjiXHV\"]\r\n    ) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const signatureProvider = new eosjs_jssig_1.JsSignatureProvider(private_keys);\r\n            signatureProvider.availableKeys = public_keys;\r\n            //@ts-ignore\r\n            const rpc = this.nodeos_rpc;\r\n            const api = new eosjs_1.Api({ rpc, signatureProvider }); //required to submit transactions\r\n            const info = yield rpc.get_info();\r\n            const lastBlockInfo = yield rpc.get_block(info.last_irreversible_block_num);\r\n            const tzOff = new Date(info.head_block_time).getTimezoneOffset();\r\n            var t = new Date((new Date(info.head_block_time)).getTime() + 10 * 60 * 1000 - tzOff * 1000 * 60).toISOString().slice(0, -1); //+10m\r\n            const transactionObj = {\r\n                actions: actions,\r\n                expiration: t,\r\n                ref_block_prefix: lastBlockInfo.ref_block_prefix,\r\n                ref_block_num: lastBlockInfo.block_num & 0xffff, // 22774\r\n            };\r\n            const a = yield api.serializeActions(transactionObj.actions);\r\n            const transaction = Object.assign(Object.assign({}, transactionObj), { actions: a });\r\n            const serializedTransaction = api.serializeTransaction(transaction);\r\n            const availableKeys = yield api.signatureProvider.getAvailableKeys();\r\n            const requiredKeys = yield api.authorityProvider.getRequiredKeys({ transaction, availableKeys });\r\n            const abis = yield api.getTransactionAbis(transaction);\r\n            // const pushTransactionArgs: PushTransactionArgs = { serializedTransaction, signatures };\r\n            const pushTransactionArgs = yield api.signatureProvider.sign({\r\n                chainId: info.chain_id,\r\n                requiredKeys: requiredKeys,\r\n                serializedTransaction: serializedTransaction,\r\n                serializedContextFreeData: undefined,\r\n                abis: abis\r\n            });\r\n            //console.log(\"signed transaction: \" + JSON.stringify(pushTransactionArgs));\r\n            /*\r\n            let tr  = serializedTransaction.buffer.toString();\r\n            let eccst = ecc.sign(serializedTransaction, private_keys[0]);\r\n            let pub_from_prv = ecc.privateToPublic(private_keys[0]);\r\n            let sig = pushTransactionArgs.signatures[0];\r\n            let key = ecc.recover(sig, tr);\r\n            let c = ecc.verify(sig, tr, public_keys[0]);\r\n            console.log(\"signature verification: return %d\", c)*/\r\n            return api.pushSignedTransaction(pushTransactionArgs);\r\n        });\r\n    }\r\n    ;\r\n}\r\nexports.NCO_BlockchainAPI = NCO_BlockchainAPI;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ERC721_schema = exports.default_schema = void 0;\r\nexports.default_schema = [\r\n    { name: 'name', type: \"string\" },\r\n    { name: 'description', type: \"string\" },\r\n    { name: 'image', type: 'string' },\r\n    { name: 'external_url', type: 'string' },\r\n    { name: 'content_type', type: 'string' },\r\n    { name: 'content', type: 'string' },\r\n    { name: 'license', type: 'string' }\r\n];\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\r\nexports.ERC721_schema = [\r\n    { name: 'name', type: \"string\" },\r\n    { name: 'description', type: \"string\" },\r\n    { name: 'image', type: 'string' },\r\n];\r\n// https://docs.opensea.io/docs/metadata-standards\r\n// export const OpenSea_schema = [\r\n//]\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHlwZXMudHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vTkNPX0Jsb2NrY2hhaW5BUEkvLi9zcmMvdHlwZXMudHM/MTFiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLkVSQzcyMV9zY2hlbWEgPSBleHBvcnRzLmRlZmF1bHRfc2NoZW1hID0gdm9pZCAwO1xyXG5leHBvcnRzLmRlZmF1bHRfc2NoZW1hID0gW1xyXG4gICAgeyBuYW1lOiAnbmFtZScsIHR5cGU6IFwic3RyaW5nXCIgfSxcclxuICAgIHsgbmFtZTogJ2Rlc2NyaXB0aW9uJywgdHlwZTogXCJzdHJpbmdcIiB9LFxyXG4gICAgeyBuYW1lOiAnaW1hZ2UnLCB0eXBlOiAnc3RyaW5nJyB9LFxyXG4gICAgeyBuYW1lOiAnZXh0ZXJuYWxfdXJsJywgdHlwZTogJ3N0cmluZycgfSxcclxuICAgIHsgbmFtZTogJ2NvbnRlbnRfdHlwZScsIHR5cGU6ICdzdHJpbmcnIH0sXHJcbiAgICB7IG5hbWU6ICdjb250ZW50JywgdHlwZTogJ3N0cmluZycgfSxcclxuICAgIHsgbmFtZTogJ2xpY2Vuc2UnLCB0eXBlOiAnc3RyaW5nJyB9XHJcbl07XHJcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2Jsb2IvbWFzdGVyL0VJUFMvZWlwLTcyMS5tZFxyXG5leHBvcnRzLkVSQzcyMV9zY2hlbWEgPSBbXHJcbiAgICB7IG5hbWU6ICduYW1lJywgdHlwZTogXCJzdHJpbmdcIiB9LFxyXG4gICAgeyBuYW1lOiAnZGVzY3JpcHRpb24nLCB0eXBlOiBcInN0cmluZ1wiIH0sXHJcbiAgICB7IG5hbWU6ICdpbWFnZScsIHR5cGU6ICdzdHJpbmcnIH0sXHJcbl07XHJcbi8vIGh0dHBzOi8vZG9jcy5vcGVuc2VhLmlvL2RvY3MvbWV0YWRhdGEtc3RhbmRhcmRzXHJcbi8vIGV4cG9ydCBjb25zdCBPcGVuU2VhX3NjaGVtYSA9IFtcclxuLy9dXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/types.ts\n");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.normalizeUsername = void 0;\r\nconst normalizeUsername = (username, r) => {\r\n    return username.replace(/\\./g, r + r.repeat(12 - username.length));\r\n};\r\nexports.normalizeUsername = normalizeUsername;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMudHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9OQ09fQmxvY2tjaGFpbkFQSS8uL3NyYy91dGlscy50cz9jNzExIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMubm9ybWFsaXplVXNlcm5hbWUgPSB2b2lkIDA7XHJcbmNvbnN0IG5vcm1hbGl6ZVVzZXJuYW1lID0gKHVzZXJuYW1lLCByKSA9PiB7XHJcbiAgICByZXR1cm4gdXNlcm5hbWUucmVwbGFjZSgvXFwuL2csIHIgKyByLnJlcGVhdCgxMiAtIHVzZXJuYW1lLmxlbmd0aCkpO1xyXG59O1xyXG5leHBvcnRzLm5vcm1hbGl6ZVVzZXJuYW1lID0gbm9ybWFsaXplVXNlcm5hbWU7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils.ts\n");

/***/ }),

/***/ "../newcoin.pool-js/src/actions/index.ts":
/*!***********************************************!*\
  !*** ../newcoin.pool-js/src/actions/index.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ActionGenerator = void 0;\r\n/* tslint:disable:variable-name */\r\nclass ActionGenerator {\r\n    constructor(contract, token_contract) {\r\n        this.contract = contract;\r\n        this.token_contract = token_contract;\r\n    }\r\n    open(authorization, owner, symbol, payer) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._pack(this.contract, authorization, \"open\", {\r\n                owner,\r\n                symbol,\r\n                payer\r\n            });\r\n        });\r\n    }\r\n    close(authorization, owner, symbol) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._pack(this.contract, authorization, \"close\", {\r\n                owner,\r\n                symbol\r\n            });\r\n        });\r\n    }\r\n    instunstake(authorization, from, quantity) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._pack(this.contract, authorization, \"instunstake\", {\r\n                from,\r\n                quantity\r\n            });\r\n        });\r\n    }\r\n    dldunstake(authorization, from, quantity) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._pack(this.contract, authorization, \"dldunstake\", {\r\n                from,\r\n                quantity\r\n            });\r\n        });\r\n    }\r\n    redeem(authorization, from, id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._pack(this.contract, authorization, \"redeem\", {\r\n                from,\r\n                id\r\n            });\r\n        });\r\n    }\r\n    stake(authorization, from, quantity) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._pack(this.token_contract, authorization, \"transfer\", {\r\n                from: from,\r\n                to: this.contract,\r\n                quantity: quantity,\r\n                memo: \"stake\"\r\n            });\r\n        });\r\n    }\r\n    _pack(account, authorization, name, data) {\r\n        return [{ account, name, authorization, data }];\r\n    }\r\n}\r\nexports.ActionGenerator = ActionGenerator;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbmV3Y29pbi5wb29sLWpzL3NyYy9hY3Rpb25zL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9OQ09fQmxvY2tjaGFpbkFQSS8uLi9uZXdjb2luLnBvb2wtanMvc3JjL2FjdGlvbnMvaW5kZXgudHM/MmE2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuQWN0aW9uR2VuZXJhdG9yID0gdm9pZCAwO1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTp2YXJpYWJsZS1uYW1lICovXHJcbmNsYXNzIEFjdGlvbkdlbmVyYXRvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb250cmFjdCwgdG9rZW5fY29udHJhY3QpIHtcclxuICAgICAgICB0aGlzLmNvbnRyYWN0ID0gY29udHJhY3Q7XHJcbiAgICAgICAgdGhpcy50b2tlbl9jb250cmFjdCA9IHRva2VuX2NvbnRyYWN0O1xyXG4gICAgfVxyXG4gICAgb3BlbihhdXRob3JpemF0aW9uLCBvd25lciwgc3ltYm9sLCBwYXllcikge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wYWNrKHRoaXMuY29udHJhY3QsIGF1dGhvcml6YXRpb24sIFwib3BlblwiLCB7XHJcbiAgICAgICAgICAgICAgICBvd25lcixcclxuICAgICAgICAgICAgICAgIHN5bWJvbCxcclxuICAgICAgICAgICAgICAgIHBheWVyXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgY2xvc2UoYXV0aG9yaXphdGlvbiwgb3duZXIsIHN5bWJvbCkge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wYWNrKHRoaXMuY29udHJhY3QsIGF1dGhvcml6YXRpb24sIFwiY2xvc2VcIiwge1xyXG4gICAgICAgICAgICAgICAgb3duZXIsXHJcbiAgICAgICAgICAgICAgICBzeW1ib2xcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBpbnN0dW5zdGFrZShhdXRob3JpemF0aW9uLCBmcm9tLCBxdWFudGl0eSkge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wYWNrKHRoaXMuY29udHJhY3QsIGF1dGhvcml6YXRpb24sIFwiaW5zdHVuc3Rha2VcIiwge1xyXG4gICAgICAgICAgICAgICAgZnJvbSxcclxuICAgICAgICAgICAgICAgIHF1YW50aXR5XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZGxkdW5zdGFrZShhdXRob3JpemF0aW9uLCBmcm9tLCBxdWFudGl0eSkge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wYWNrKHRoaXMuY29udHJhY3QsIGF1dGhvcml6YXRpb24sIFwiZGxkdW5zdGFrZVwiLCB7XHJcbiAgICAgICAgICAgICAgICBmcm9tLFxyXG4gICAgICAgICAgICAgICAgcXVhbnRpdHlcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZWRlZW0oYXV0aG9yaXphdGlvbiwgZnJvbSwgaWQpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcGFjayh0aGlzLmNvbnRyYWN0LCBhdXRob3JpemF0aW9uLCBcInJlZGVlbVwiLCB7XHJcbiAgICAgICAgICAgICAgICBmcm9tLFxyXG4gICAgICAgICAgICAgICAgaWRcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBzdGFrZShhdXRob3JpemF0aW9uLCBmcm9tLCBxdWFudGl0eSkge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wYWNrKHRoaXMudG9rZW5fY29udHJhY3QsIGF1dGhvcml6YXRpb24sIFwidHJhbnNmZXJcIiwge1xyXG4gICAgICAgICAgICAgICAgZnJvbTogZnJvbSxcclxuICAgICAgICAgICAgICAgIHRvOiB0aGlzLmNvbnRyYWN0LFxyXG4gICAgICAgICAgICAgICAgcXVhbnRpdHk6IHF1YW50aXR5LFxyXG4gICAgICAgICAgICAgICAgbWVtbzogXCJzdGFrZVwiXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgX3BhY2soYWNjb3VudCwgYXV0aG9yaXphdGlvbiwgbmFtZSwgZGF0YSkge1xyXG4gICAgICAgIHJldHVybiBbeyBhY2NvdW50LCBuYW1lLCBhdXRob3JpemF0aW9uLCBkYXRhIH1dO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuQWN0aW9uR2VuZXJhdG9yID0gQWN0aW9uR2VuZXJhdG9yO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../newcoin.pool-js/src/actions/index.ts\n");

/***/ }),

/***/ "../newcoin.pool-js/src/api/index.ts":
/*!*******************************************!*\
  !*** ../newcoin.pool-js/src/api/index.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass RpcApi {\r\n    constructor(nodeos_url, contract, fetch) {\r\n        this.nodeos_url = nodeos_url;\r\n        this.contract = contract;\r\n        this.fetch = fetch;\r\n    }\r\n    getCurrencyStats(payload) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield this.fetch(`${this.nodeos_url}/v1/chain/get_currency_stats`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(payload),\r\n            });\r\n        });\r\n    }\r\n    getCurrencyBalance(payload) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield this.fetch(`${this.nodeos_url}/v1/chain/get_currency_balance`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(payload),\r\n            });\r\n        });\r\n    }\r\n    getTableRows(payload) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield this.fetch(`${this.nodeos_url}/v1/chain/get_table_rows`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(payload),\r\n            });\r\n        });\r\n    }\r\n    getUnstake(opts) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.getTableRows({\r\n                json: true,\r\n                code: this.contract,\r\n                scope: opts.owner,\r\n                table: \"unstakes\",\r\n                table_key: opts.id,\r\n                lower_bound: opts.id,\r\n                upper_bound: opts.id,\r\n                key_type: \"i64\",\r\n                index_position: \"1\",\r\n            });\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = RpcApi;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbmV3Y29pbi5wb29sLWpzL3NyYy9hcGkvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9OQ09fQmxvY2tjaGFpbkFQSS8uLi9uZXdjb2luLnBvb2wtanMvc3JjL2FwaS9pbmRleC50cz8xMTA0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY2xhc3MgUnBjQXBpIHtcclxuICAgIGNvbnN0cnVjdG9yKG5vZGVvc191cmwsIGNvbnRyYWN0LCBmZXRjaCkge1xyXG4gICAgICAgIHRoaXMubm9kZW9zX3VybCA9IG5vZGVvc191cmw7XHJcbiAgICAgICAgdGhpcy5jb250cmFjdCA9IGNvbnRyYWN0O1xyXG4gICAgICAgIHRoaXMuZmV0Y2ggPSBmZXRjaDtcclxuICAgIH1cclxuICAgIGdldEN1cnJlbmN5U3RhdHMocGF5bG9hZCkge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB5aWVsZCB0aGlzLmZldGNoKGAke3RoaXMubm9kZW9zX3VybH0vdjEvY2hhaW4vZ2V0X2N1cnJlbmN5X3N0YXRzYCwge1xyXG4gICAgICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcclxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGdldEN1cnJlbmN5QmFsYW5jZShwYXlsb2FkKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHlpZWxkIHRoaXMuZmV0Y2goYCR7dGhpcy5ub2Rlb3NfdXJsfS92MS9jaGFpbi9nZXRfY3VycmVuY3lfYmFsYW5jZWAsIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7IFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXHJcbiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBnZXRUYWJsZVJvd3MocGF5bG9hZCkge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB5aWVsZCB0aGlzLmZldGNoKGAke3RoaXMubm9kZW9zX3VybH0vdjEvY2hhaW4vZ2V0X3RhYmxlX3Jvd3NgLCB7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxyXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCksXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZ2V0VW5zdGFrZShvcHRzKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0VGFibGVSb3dzKHtcclxuICAgICAgICAgICAgICAgIGpzb246IHRydWUsXHJcbiAgICAgICAgICAgICAgICBjb2RlOiB0aGlzLmNvbnRyYWN0LFxyXG4gICAgICAgICAgICAgICAgc2NvcGU6IG9wdHMub3duZXIsXHJcbiAgICAgICAgICAgICAgICB0YWJsZTogXCJ1bnN0YWtlc1wiLFxyXG4gICAgICAgICAgICAgICAgdGFibGVfa2V5OiBvcHRzLmlkLFxyXG4gICAgICAgICAgICAgICAgbG93ZXJfYm91bmQ6IG9wdHMuaWQsXHJcbiAgICAgICAgICAgICAgICB1cHBlcl9ib3VuZDogb3B0cy5pZCxcclxuICAgICAgICAgICAgICAgIGtleV90eXBlOiBcImk2NFwiLFxyXG4gICAgICAgICAgICAgICAgaW5kZXhfcG9zaXRpb246IFwiMVwiLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLmRlZmF1bHQgPSBScGNBcGk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../newcoin.pool-js/src/api/index.ts\n");

/***/ }),

/***/ "../newcoin.pool-js/src/index.ts":
/*!***************************************!*\
  !*** ../newcoin.pool-js/src/index.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RpcApi = exports.ActionGenerator = void 0;\r\nconst actions_1 = __webpack_require__(/*! ./actions */ \"../newcoin.pool-js/src/actions/index.ts\");\r\nObject.defineProperty(exports, \"ActionGenerator\", ({ enumerable: true, get: function () { return actions_1.ActionGenerator; } }));\r\nconst api_1 = __importDefault(__webpack_require__(/*! ./api */ \"../newcoin.pool-js/src/api/index.ts\"));\r\nexports.RpcApi = api_1.default;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbmV3Y29pbi5wb29sLWpzL3NyYy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL05DT19CbG9ja2NoYWluQVBJLy4uL25ld2NvaW4ucG9vbC1qcy9zcmMvaW5kZXgudHM/YmFhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XHJcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLlJwY0FwaSA9IGV4cG9ydHMuQWN0aW9uR2VuZXJhdG9yID0gdm9pZCAwO1xyXG5jb25zdCBhY3Rpb25zXzEgPSByZXF1aXJlKFwiLi9hY3Rpb25zXCIpO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBY3Rpb25HZW5lcmF0b3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjdGlvbnNfMS5BY3Rpb25HZW5lcmF0b3I7IH0gfSk7XHJcbmNvbnN0IGFwaV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2FwaVwiKSk7XHJcbmV4cG9ydHMuUnBjQXBpID0gYXBpXzEuZGVmYXVsdDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../newcoin.pool-js/src/index.ts\n");

/***/ }),

/***/ "@eoscafe/hyperion":
/*!************************************!*\
  !*** external "@eoscafe/hyperion" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("@eoscafe/hyperion");

/***/ }),

/***/ "@newcoin-foundation/newcoin.daos-js":
/*!******************************************************!*\
  !*** external "@newcoin-foundation/newcoin.daos-js" ***!
  \******************************************************/
/***/ ((module) => {

module.exports = require("@newcoin-foundation/newcoin.daos-js");

/***/ }),

/***/ "@newcoin-foundation/newcoin.pool-js":
/*!******************************************************!*\
  !*** external "@newcoin-foundation/newcoin.pool-js" ***!
  \******************************************************/
/***/ ((module) => {

module.exports = require("@newcoin-foundation/newcoin.pool-js");

/***/ }),

/***/ "@newcoin-foundation/newcoin.pools-js/":
/*!********************************************************!*\
  !*** external "@newcoin-foundation/newcoin.pools-js/" ***!
  \********************************************************/
/***/ ((module) => {

module.exports = require("@newcoin-foundation/newcoin.pools-js/");

/***/ }),

/***/ "atomicassets":
/*!*******************************!*\
  !*** external "atomicassets" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("atomicassets");

/***/ }),

/***/ "cross-fetch":
/*!******************************!*\
  !*** external "cross-fetch" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("cross-fetch");

/***/ }),

/***/ "eosjs":
/*!************************!*\
  !*** external "eosjs" ***!
  \************************/
/***/ ((module) => {

module.exports = require("eosjs");

/***/ }),

/***/ "eosjs-ecc-priveos":
/*!************************************!*\
  !*** external "eosjs-ecc-priveos" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("eosjs-ecc-priveos");

/***/ }),

/***/ "eosjs/dist/eosjs-jssig":
/*!*****************************************!*\
  !*** external "eosjs/dist/eosjs-jssig" ***!
  \*****************************************/
/***/ ((module) => {

module.exports = require("eosjs/dist/eosjs-jssig");

/***/ }),

/***/ "node-fetch":
/*!*****************************!*\
  !*** external "node-fetch" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node-fetch");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	module.exports.NCO_BlockchainAPI = __webpack_exports__.NCO_BlockchainAPI;
/******/ 	
/******/ })()
;