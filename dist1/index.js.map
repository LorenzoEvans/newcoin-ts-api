{"version":3,"file":"index.js","mappings":";;;;;;;;;AAAA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,8BAAmB;;AAE7D,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,gDAAgD,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oCAAoC;AAClE;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,4CAA4C;AACnG,iBAAiB;AACjB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc,qCAAqC,aAAa;AAC7F,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;;AAGA;AACA,6CAA6C;AAC7C;AACA,gDAAgD,aAAa;AAC7D;AACA;AACA;AACA,+GAA+G;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,qCAAqC,kCAAkC;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,mBAAmB;AACzG,sEAAsE,8BAA8B;AACpG,qEAAqE,8BAA8B;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oHAAoH,gCAAgC;AACpK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yHAAyH;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yCAAyC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,yCAAyC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yCAAyC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,yCAAyC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yCAAyC,OAAO;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0CAA0C;AACzF;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,sCAAsC;AACtC;AACA,oFAAoF,WAAW,eAAe;AAC9G;AACA;AACA,6CAA6C,QAAQ,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,4CAA4C;AAChG;AACA;AACA;AACA;AACA,4EAA4E,WAAW,QAAQ,IAAI;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4CAA4C;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4CAA4C;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4CAA4C;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,wCAAwC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,wCAAwC;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yCAAyC;AACnF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,iBAAiB;AACnE;AACA,6CAA6C,QAAQ,QAAQ;AAC7D;AACA;AACA;AACA;AACA,yDAAyD,0CAA0C;AACnG;AACA,6CAA6C,QAAQ,QAAQ;AAC7D;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,qCAAqC;AACnG;AACA,6CAA6C,QAAQ,qBAAqB;AAC1E;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0HAA0H;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wBAAwB,GAAG;AACjE;AACA;AACA;AACA,sIAAsI;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,qBAAqB,YAAY;AAC3F;AACA;AACA,2EAA2E,4BAA4B;AACvG;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;;AAGA,gDAAgD,aAAa;AAC7D;AACA;AACA,MAAM,8BAA8B;AACpC,MAAM,qCAAqC;AAC3C,MAAM,+BAA+B;AACrC,MAAM,sCAAsC;AAC5C,MAAM,sCAAsC;AAC5C,MAAM,iCAAiC;AACvC,MAAM;AACN;AACA;AACA;AACA,MAAM,8BAA8B;AACpC,MAAM,qCAAqC;AAC3C,MAAM,+BAA+B;AACrC;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;;AAGA,gDAAgD,aAAa;AAC7D;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8BAAmB;;AAEpC,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8BAAmB;;AAEpC,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8BAAmB;;AAEpC,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8BAAmB;;AAEpC,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8BAAmB;;AAEpC,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8BAAmB;;AAEpC,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8BAAmB;;AAEpC,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8BAAmB;;AAEpC,OAAO;;AAEP,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,4CAAmB;;AAE5C,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,gFAAqC;;AAE9D,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,gFAAqC;;AAE9D,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,oFAAuC;;AAEhE,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,gCAAa;;AAEtC,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,oBAAO;;AAEhC,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,4CAAmB;;AAE5C,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,sDAAwB;;AAEjD,OAAO;;AAEP,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gCAAmB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gCAAmB;AACvD,UAAU,gCAAgC;AAC1C;AACA,UAAU;AACV;AACA;;;;;;;;;;;ACn3CA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://NCO_BlockchainAPI/./dist/index.js","webpack://NCO_BlockchainAPI/external commonjs \"@eoscafe/hyperion\"","webpack://NCO_BlockchainAPI/external commonjs \"@newcoin-foundation/newcoin.daos-js\"","webpack://NCO_BlockchainAPI/external commonjs \"@newcoin-foundation/newcoin.pool-js\"","webpack://NCO_BlockchainAPI/external commonjs \"@newcoin-foundation/newcoin.pools-js/\"","webpack://NCO_BlockchainAPI/external commonjs \"cross-fetch\"","webpack://NCO_BlockchainAPI/external commonjs \"eosjs\"","webpack://NCO_BlockchainAPI/external commonjs \"eosjs-ecc-priveos\"","webpack://NCO_BlockchainAPI/external commonjs \"eosjs/dist/eosjs-jssig\"","webpack://NCO_BlockchainAPI/webpack/bootstrap","webpack://NCO_BlockchainAPI/webpack/before-startup","webpack://NCO_BlockchainAPI/webpack/startup","webpack://NCO_BlockchainAPI/webpack/after-startup"],"sourcesContent":["/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./dist/index.js\":\n/*!***********************!*\\\n  !*** ./dist/index.js ***!\n  \\***********************/\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./dist/index.js\":\n/*!***********************!*\\\n  !*** ./dist/index.js ***!\n  \\***********************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_231__) => {\n\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./dist/actions.js\":\n/*!*************************!*\\\n  !*** ./dist/actions.js ***!\n  \\*************************/\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ActionGenerator = void 0;\nclass ActionGenerator {\n    constructor(contract, token_contract) {\n        this.contract = contract;\n        this.token_contract = token_contract;\n        this.newaccount = (new_name, payer, newacc_public_active_key, newacc_public_owner_key) => ({\n            account: 'eosio',\n            name: 'newaccount',\n            authorization: [{\n                    actor: payer,\n                    permission: 'active',\n                }],\n            data: {\n                creator: payer,\n                name: new_name,\n                owner: {\n                    threshold: 1,\n                    keys: [{\n                            key: newacc_public_owner_key,\n                            weight: 1\n                        }],\n                    accounts: [],\n                    waits: []\n                },\n                active: {\n                    threshold: 1,\n                    keys: [{\n                            key: newacc_public_active_key,\n                            weight: 1\n                        }],\n                    accounts: [],\n                    waits: []\n                },\n            }\n        });\n        this.buyrambytes = (receiver, payer = 'io', amt = 8192) => ({\n            account: 'eosio',\n            name: 'buyrambytes',\n            authorization: [{ actor: payer, permission: 'active' }],\n            data: {\n                payer: payer,\n                receiver: receiver,\n                bytes: amt,\n            },\n        });\n        this.delegateBw = (receiver, payer = 'io', net_amount = '100.0000 NCO', cpu_amount = '100.0000 NCO', trfer = true) => ({\n            account: 'eosio',\n            name: 'delegatebw',\n            authorization: [{\n                    actor: payer,\n                    permission: 'active',\n                }],\n            data: {\n                from: payer,\n                receiver: receiver,\n                stake_net_quantity: net_amount,\n                stake_cpu_quantity: cpu_amount,\n                transfer: trfer,\n            }\n        });\n        /*createUser = async (\n          newUser: string,\n          payer: string,\n          public_active_key: string,\n          public_owner_key: string\n        ) => {\n        \n          let newacc_action = this._newaccount(newUser, payer, public_active_key, public_owner_key);\n          let buyram_action = this._buyrambytes(newUser, payer);\n          let delegatebw_action = this._delegateBw(newUser, payer);\n        \n          return [newacc_action, buyram_action, delegatebw_action]\n        };\n        \n        createAccount(\n          authorization: EosioAuthorizationObject[],\n          owner: string,\n          symbol: string,\n          payer: string\n        ) {\n          return this._pack(this.contract, authorization, \"open\", {\n            owner,\n            symbol,\n            payer\n          });\n        }*/\n        this.createCollection = (author, collection_name, authorized_accounts, notify_accounts = [], market_fee, allow_notify) => {\n            const action = {\n                account: 'atomicassets',\n                name: 'createcol',\n                data: {\n                    author: author,\n                    collection_name: collection_name,\n                    allow_notify: allow_notify,\n                    authorized_accounts: authorized_accounts,\n                    notify_accounts: notify_accounts,\n                    market_fee: market_fee,\n                    data: []\n                },\n                authorization: [\n                    { actor: author, permission: 'active' }\n                ]\n            };\n            return action;\n        };\n        this.createSchema = (author, payer, collection_name, schema_name, sch) => {\n            const action = {\n                account: 'atomicassets',\n                name: 'createschema',\n                data: {\n                    authorized_creator: author,\n                    collection_name: collection_name,\n                    schema_name: schema_name,\n                    schema_format: sch\n                },\n                authorization: [\n                    { actor: author, permission: 'active' }\n                ]\n            };\n            return action;\n        };\n        this.createTemplate = (author, collection_name, schema_name, xferable, burnable, max_supply, template_fields) => {\n            const action = {\n                account: 'atomicassets',\n                name: 'createtempl',\n                data: {\n                    authorized_creator: author,\n                    collection_name: collection_name,\n                    schema_name: schema_name,\n                    transferable: xferable,\n                    burnable: burnable,\n                    max_supply: 0xffffff,\n                    immutable_data: template_fields //{key: 'name', value: ['string', 'default'] } ]\n                },\n                authorization: [\n                    { actor: author, permission: 'active' }\n                ]\n            };\n            return action;\n        };\n        this.createPermission = (author, perm_name, perm_key) => {\n            const authorization_object = {\n                threshold: 1,\n                accounts: [{ permission: { actor: author, permission: 'active' }, weight: 1 }],\n                keys: [{ key: perm_key, weight: 1 }],\n                waits: []\n            };\n            const updateauth_input = {\n                account: author,\n                permission: perm_name,\n                parent: 'active',\n                auth: authorization_object\n            };\n            const action = {\n                account: 'eosio',\n                name: 'updateauth',\n                data: updateauth_input,\n                authorization: [\n                    { actor: author, permission: 'active' }\n                ]\n            };\n            return action;\n        };\n        this.mintAsset = (author, payer, col_name, sch_name, tmpl_id, immutable_data, mutable_data) => {\n            const action = {\n                account: 'atomicassets',\n                name: 'mintasset',\n                data: {\n                    authorized_minter: author,\n                    collection_name: col_name,\n                    schema_name: sch_name,\n                    template_id: tmpl_id,\n                    new_asset_owner: author,\n                    immutable_data: immutable_data,\n                    mutable_data: mutable_data,\n                    tokens_to_back: [] //tokens to back \n                },\n                authorization: [\n                    { actor: author, permission: 'active' }\n                ]\n            };\n            return action;\n        };\n        this.createPool = (creator, ticker, is_inflatable, is_deflatable, is_treasury, descr) => {\n            const action = {\n                account: 'pools2.nco',\n                name: 'createpool',\n                data: {\n                    owner: creator,\n                    ticker: ticker,\n                    description: descr,\n                    is_inflatable: is_inflatable,\n                    is_deflatable: is_deflatable,\n                    is_treasury: is_treasury\n                },\n                authorization: [\n                    { actor: creator, permission: 'active' }\n                ]\n            };\n            return action;\n        };\n        this.txNcoBalance = (from, to, amt, memo) => {\n            const action = {\n                account: 'eosio.token',\n                name: 'transfer',\n                data: {\n                    from: from,\n                    to: to,\n                    quantity: amt,\n                    memo: memo //''\n                },\n                authorization: [\n                    { 'actor': from, 'permission': 'active' }\n                ]\n            };\n            return action;\n        };\n        this.txBalance = (contract, from, to, amt, memo) => {\n            const action = {\n                account: contract,\n                name: 'transfer',\n                data: {\n                    from: from,\n                    to: to,\n                    quantity: amt,\n                    memo: memo //''\n                },\n                authorization: [\n                    { 'actor': from, 'permission': 'active' }\n                ]\n            };\n            return action;\n        };\n    }\n    _pack(account, authorization, name, data) {\n        return [{ account, name, authorization, data }];\n    }\n}\nexports.ActionGenerator = ActionGenerator;\n\n\n/***/ }),\n\n/***/ \"./dist/index.js\":\n/*!***********************!*\\\n  !*** ./dist/index.js ***!\n  \\***********************/\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_9037__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NCO_BlockchainAPI = exports.devnet_services = exports.devnet_urls = exports.default_schema = void 0;\n// EOS imports\nconst eosjs_1 = __nested_webpack_require_9037__(/*! eosjs */ \"eosjs\");\nconst eosjs_jssig_1 = __nested_webpack_require_9037__(/*! eosjs/dist/eosjs-jssig */ \"eosjs/dist/eosjs-jssig\"); // development only\n// @ts-ignore\nconst eosjs_ecc_priveos_1 = __importDefault(__nested_webpack_require_9037__(/*! eosjs-ecc-priveos */ \"eosjs-ecc-priveos\"));\n// Extra backend services\nconst hyperion_1 = __nested_webpack_require_9037__(/*! @eoscafe/hyperion */ \"@eoscafe/hyperion\");\n// Newcoin services  \nconst newcoin_pools_js_1 = __nested_webpack_require_9037__(/*! @newcoin-foundation/newcoin.pools-js/ */ \"@newcoin-foundation/newcoin.pools-js/\");\nconst newcoin_pool_js_1 = __nested_webpack_require_9037__(/*! @newcoin-foundation/newcoin.pool-js */ \"@newcoin-foundation/newcoin.pool-js\");\nconst newcoin_daos_js_1 = __nested_webpack_require_9037__(/*! @newcoin-foundation/newcoin.daos-js */ \"@newcoin-foundation/newcoin.daos-js\");\nconst actions_1 = __nested_webpack_require_9037__(/*! ./actions */ \"./dist/actions.js\");\n// @ts-ignore\n// import * as node_fetch from 'node-fetch';\nconst cross_fetch_1 = __importDefault(__nested_webpack_require_9037__(/*! cross-fetch */ \"cross-fetch\"));\nconst types_1 = __nested_webpack_require_9037__(/*! ./types */ \"./dist/types.js\");\nObject.defineProperty(exports, \"default_schema\", ({ enumerable: true, get: function () { return types_1.default_schema; } }));\nconst utils_1 = __nested_webpack_require_9037__(/*! ./utils */ \"./dist/utils.js\");\nconst CREATE_ACCOUNT_DEFAULTS = {\n    ram_amt: 8192,\n    cpu_amount: '100.0000 NCO',\n    net_amount: '100.0000 NCO',\n    xfer: false,\n};\nexports.devnet_urls = {\n    nodeos_url: \"https://nodeos-dev.newcoin.org\",\n    hyperion_url: \"https://hyperion-dev.newcoin.org\",\n    atomicassets_url: \"https://atomic-dev.newcoin.org/\"\n};\nexports.devnet_services = {\n    eosio_contract: \"eosio\",\n    token_contract: \"eosio.token\",\n    maindao_contract: \"pool.nco\",\n    staking_contract: \"pools2.nco\",\n    daos_contract: \"daos.nco\"\n};\n/**\n * The primary tool to interact with [https://newcoin.org](newcoin.org).\n *\n * This is an early alpha.\n *\n * See [https://docs.newcoin.org/](https://docs.newcoin.org/) for an overview of the newcoin ecosystem.\n */\nclass NCO_BlockchainAPI {\n    /**\n     * Init the api\n     * @name newcoin-api\n     * @param urls\n     * @param services\n     * @returns a Newcoin API instance\n     */\n    constructor(urls, services) {\n        this.urls = urls;\n        console.log(\"Init URLS \" + JSON.stringify(urls));\n        //this.aa_api = new ExplorerApi(this.urls.atomicassets_url, \"atomicassets\", { fetch: node_fetch });\n        this.nodeos_rpc = new eosjs_1.JsonRpc(this.urls.nodeos_url, { fetch: cross_fetch_1.default });\n        this.hrpc = new hyperion_1.JsonRpc(this.urls.hyperion_url, { fetch: cross_fetch_1.default });\n        this.cApi = new newcoin_daos_js_1.ChainApi(this.urls.nodeos_url, services.daos_contract, cross_fetch_1.default);\n        this.poolsRpcApi = new newcoin_pools_js_1.RpcApi(this.urls.nodeos_url, services.staking_contract, cross_fetch_1.default);\n        this.poolRpcApi = new newcoin_pool_js_1.RpcApi(this.urls.nodeos_url, services.maindao_contract, cross_fetch_1.default);\n        this.aGen = new newcoin_daos_js_1.ActionGenerator(services.daos_contract, services.staking_contract);\n        this.mGen = new newcoin_pool_js_1.ActionGenerator(services.maindao_contract, services.token_contract);\n        this.pGen = new newcoin_pools_js_1.ActionGenerator(services.staking_contract, services.maindao_contract);\n        this.sdkGen = new actions_1.ActionGenerator(services.eosio_contract, services.token_contract);\n        this.services = services;\n    }\n    // Native EOS services\n    /**\n     * Create a key pair assuming a secure environment (not frontend)\n     * @params none\n     * @returns An EOS key pair\n     */\n    async createKeyPair() {\n        await eosjs_ecc_priveos_1.default.initialize();\n        let opts = { secureEnv: true };\n        let p = await eosjs_ecc_priveos_1.default.randomKey(0, opts);\n        //let x = ecc.isValidPrivate(p);\n        let t = { prv_key: p, pub_key: eosjs_ecc_priveos_1.default.privateToPublic(p) };\n        return t;\n    }\n    /**\n     * Create a user - multistage operation creating new user account,\n     * defailt collection, schema and template for the account\n     * @param NCCreateUser\n     * @returns NCReturnTxs\n     */\n    async createUser(inpt) {\n        const { newUser, newacc_pub_active_key, newacc_pub_owner_key, payer, payer_prv_key, ram_amt, net_amount, cpu_amount, xfer } = Object.assign(Object.assign({}, CREATE_ACCOUNT_DEFAULTS), inpt);\n        let t;\n        let res = {};\n        let tres;\n        let newacc_action = this.sdkGen.newaccount(newUser, payer, newacc_pub_active_key, newacc_pub_owner_key);\n        let buyram_action = this.sdkGen.buyrambytes(newUser, payer, ram_amt);\n        let delegatebw_action = this.sdkGen.delegateBw(newUser, payer, net_amount, cpu_amount, xfer);\n        let payer_pub_key = eosjs_ecc_priveos_1.default.privateToPublic(payer_prv_key);\n        console.log(\"before create account transaction\");\n        tres = await this.SubmitTx([newacc_action, buyram_action, delegatebw_action], [payer_pub_key], [payer_prv_key]); // [] contained      \n        res.TxID_createAcc = tres.transaction_id;\n        console.log(\"createuser transaction complete\");\n        return res;\n    }\n    /**\n     * Create default collection for the account\n     * @param  NCCreateCollection\n     * @returns Create Collection and template transactions' ids\n     */\n    async createCollection(inpt) {\n        let t;\n        let res = {};\n        let tres;\n        let d = 12 - inpt.user.length;\n        if (inpt.collection_name == undefined)\n            inpt.collection_name = (0, utils_1.normalizeUsername)(inpt.user, \"z\");\n        if (inpt.schema_name == undefined)\n            inpt.schema_name = (0, utils_1.normalizeUsername)(inpt.user, \"w\");\n        let user_public_active_key = eosjs_ecc_priveos_1.default.privateToPublic(inpt.user_prv_active_key);\n        let mkt_fee = inpt.mkt_fee ? inpt.mkt_fee : 0.05;\n        let allow_notify = inpt.allow_notify ? inpt.allow_notify : true;\n        t = this.sdkGen.createCollection(inpt.user, inpt.collection_name, [inpt.user], [inpt.user], mkt_fee, allow_notify);\n        console.log(t);\n        console.log(\"createcol transaction\");\n        tres = await this.SubmitTx([t], [user_public_active_key], [inpt.user_prv_active_key]);\n        res.TxID_createCol = tres.transaction_id;\n        console.log(\"creating schema\");\n        let schema_fields = inpt.schema_fields ? inpt.schema_fields : types_1.default_schema;\n        t = this.sdkGen.createSchema(inpt.user, inpt.user, inpt.collection_name, inpt.schema_name, schema_fields);\n        console.log(t);\n        console.log(\"createsch transaction\");\n        tres = await this.SubmitTx([t], [user_public_active_key], [inpt.user_prv_active_key]);\n        res.TxID_createSch = tres.transaction_id;\n        console.log(\"creating template\");\n        let template = inpt.template_fields ? inpt.template_fields : [];\n        let xferable = inpt.xferable ? inpt.xferable : true;\n        let burnable = inpt.burnable ? inpt.burnable : true;\n        let max_supply = inpt.max_supply ? inpt.max_supply : 0xffffff;\n        t = this.sdkGen.createTemplate(inpt.user, inpt.collection_name, inpt.schema_name, xferable, burnable, max_supply, template);\n        console.log(t);\n        console.log(\"creating template transaction\");\n        tres = await this.SubmitTx([t], [user_public_active_key], [inpt.user_prv_active_key]);\n        res.TxID_createTpl = res.TxID_createTpl;\n        return res;\n    }\n    /**\n     * Create a new permission subordinate to the Active permission.\n     * (future optional: allow under owner, TBD)\n     * @param NCCreatePermission\n     * @returns Create permission transaction id\n     */\n    async createPermission(inpt) {\n        let t = this.sdkGen.createPermission(inpt.author, inpt.perm_name, inpt.perm_pub_key);\n        let res = await this.SubmitTx([t], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.author_prv_active_key)], [inpt.author_prv_active_key]);\n        let r = {};\n        r.TxID_createPerm = res.transaction_id;\n        return r;\n    }\n    /**\n     * Link a permission to a specific action of a specific contract.\n     * @param NCLinkPerm\n     * author: the permission's owner to be linked\n     * code: the owner of the action to be linked\n     * type: the action to be linked\n     * 'active', 'owner' ...\n     * @returns Link permission transaction id\n     */\n    async linkPermission(inpt) {\n        const linkauth_input = {\n            account: inpt.author,\n            code: inpt.action_owner,\n            type: inpt.action_to_link,\n            requirement: inpt.perm_to_link, // \n        };\n        // the action which will make the linking \n        let action = {\n            account: 'eosio',\n            name: 'linkauth',\n            data: linkauth_input,\n            authorization: [{\n                    actor: inpt.author,\n                    permission: 'active'\n                }]\n        };\n        let res = await this.SubmitTx([action], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.author_prv_active_key)], [inpt.author_prv_active_key]);\n        let r = {};\n        r.TxID_linkPerm = res.transaction_id;\n        return r;\n    }\n    /* =====================================================================================\n     * Main DAO service: common staking pool transfrming NCO (external convertible currency)\n     * into internal GNCO currency.\n     *\n     * Staked amount is subject to a staking fee, redemption delay and/or\n     * instant unstaking fee.\n     * @param   NCStakeMainDao\n     * @returns NCReturnTxs\n     */\n    async stakeMainDAO(inpt) {\n        let r = {};\n        const stakeTx = await this.mGen.stake([{ actor: inpt.payer, permission: \"active\" }], inpt.payer, inpt.amt);\n        console.log(\"action: \" + JSON.stringify(stakeTx));\n        const res = await this.SubmitTx(stakeTx, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\n        r.TxID_stakeMainDAO = res.transaction_id;\n        return r;\n    }\n    /**\n    * Instant UnStake mainDAO with penalty\n    * @param NCStakeMainDao\n    * @returns NCReturnTxs\n    */\n    async instUnstakeMainDAO(inpt) {\n        let r = {};\n        const stakeTx = await this.mGen.instunstake([{ actor: inpt.payer, permission: \"active\" }], inpt.payer, inpt.amt);\n        console.log(\"action: \" + JSON.stringify(stakeTx));\n        const res = await this.SubmitTx(stakeTx, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\n        r.TxID_unstakeMainDAO = res.transaction_id;\n        return r;\n    }\n    /**\n     * Delayed UnStake mainDAO delay without penalty\n     * @param NCStakeMainDao\n     * @returns NCReturnTxs\n     */\n    async dldUnstakeMainDAO(inpt) {\n        let r = {};\n        const stakeTx = await this.mGen.dldunstake([{ actor: inpt.payer, permission: \"active\" }], inpt.payer, inpt.amt);\n        console.log(\"action: \" + JSON.stringify(stakeTx));\n        const res = await this.SubmitTx(stakeTx, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\n        r.TxID_unstakeMainDAO = res.transaction_id;\n        return r;\n    }\n    // ========================================================================\n    /** Staking pools service, issuing social tokens\n     *\n     * Create a staking pool for an account.\n     * Selection of ticker and inflation/deflation optionality\n     * @param   NCCreatePool\n     * @returns Create Pool transaction id\n     */\n    async createPool(inpt) {\n        var _a, _b, _c;\n        inpt.ticker = (inpt.ticker || inpt.owner.substring(0, 5)).toUpperCase();\n        (_a = inpt.is_inflatable) !== null && _a !== void 0 ? _a : (inpt.is_inflatable = true);\n        (_b = inpt.is_deflatable) !== null && _b !== void 0 ? _b : (inpt.is_deflatable = true);\n        (_c = inpt.is_treasury) !== null && _c !== void 0 ? _c : (inpt.is_treasury = false);\n        console.log(\"Creating pool: \" + JSON.stringify(inpt));\n        let t = this.sdkGen.createPool(inpt.owner, inpt.ticker, inpt.is_inflatable, inpt.is_deflatable, inpt.is_treasury, \"test pool for \" + inpt.owner);\n        let res = await this.SubmitTx([t], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.owner_prv_active_key)], [inpt.owner_prv_active_key]);\n        let r = {};\n        r.TxID_createPool = res.transaction_id;\n        return r;\n    }\n    /**\n     * Stake to creator pool\n     * @param\n     * @returns Create Pool transaction id\n     */\n    async stakePool(inpt) {\n        let p = { owner: inpt.owner };\n        let r = {};\n        console.log(\"Get poolbyowner: \", JSON.stringify(p));\n        let q = await this.poolsRpcApi.getPoolByOwner(p);\n        let t = await q.json();\n        const pool_id = t.rows[0].id;\n        const pool_code = t.rows[0].code;\n        console.log(\"pool:\" + JSON.stringify(t));\n        const stakeTx = await this.pGen.stakeToPool([{ actor: inpt.payer, permission: \"active\" }], inpt.payer, inpt.amt, pool_id);\n        console.log(\"action: \" + JSON.stringify(stakeTx));\n        const res = await this.SubmitTx(stakeTx, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\n        r.TxID_stakePool = res.transaction_id;\n        r.pool_id = pool_id;\n        r.pool_code = pool_code;\n        return r;\n    }\n    // DAO functionality\n    /**\n     * Unstake creator pool\n     * @param   NCUnstakePool\n     * @returns Create Pool transaction id\n     */\n    async unstakePool(inpt) {\n        const t = await this.pGen.withdrawFromPool([{ actor: inpt.payer, permission: \"active\" }], //{ actor: \"io\", permission: \"active\"}\n        inpt.payer, inpt.amt);\n        console.log(\"action: \" + JSON.stringify(t));\n        const res = await this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\n        let r = {};\n        r.TxID_unstakePool = res.transaction_id;\n        return r;\n    }\n    /**\n     * DAO creation. One per account.\n     * @param inpt : NCCreateDao\n     * @returns NCReturnTxs.TxID_createDao, NCReturnTxs.dao_id\n     */\n    async createDao(inpt) {\n        const t = await this.aGen.createDao([{ actor: inpt.author, permission: \"active\" }], inpt.author, inpt.descr);\n        const res = await this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.author_prv_key)], [inpt.author_prv_key]);\n        let p = { owner: inpt.author };\n        //console.log(\"Get dao by owner: \", JSON.stringify(p));\n        let q = await this.cApi.getDAOByOwner(p);\n        let w = await q.json();\n        console.log(\"received from getDaoByOwner\" + JSON.stringify(w));\n        let r = {};\n        r.TxID_createDao = res.transaction_id;\n        r.dao_id = w.rows[0].id.toString();\n        // r.dao_id = r.dao_id.toString() ; \n        return r;\n    }\n    async getDaoProposals(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner, true));\n        if (!dao_id)\n            return { dao_id: null };\n        // let p: ProposalPayload = { daoID: dao_id.toString(), proposer: proposer };\n        //console.log(\"Get proposal by author: \", JSON.stringify(p));\n        let q = await this.cApi.getProposalByProposer(Object.assign(Object.assign({}, inpt), { daoID: dao_id }));\n        let w = await q.json();\n        //console.log(\"received from getProposalByOwner\" + JSON.stringify(w));\n        return Object.assign(Object.assign({}, w), { dao_id });\n    }\n    /**\n     *\n     * @param inpt : NCCreateDaoProposal\n     * @returns NCReturnTxs.TxID_createDaoProposal, NCReturnTxs.proposal_id\n     */\n    async createDaoProposal(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        const t = await this.aGen.createProposal([{ actor: inpt.proposer, permission: \"active\" }], inpt.proposer, Number(dao_id), inpt.title, inpt.summary, inpt.url, inpt.vote_start, inpt.vote_end);\n        const res = await this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.proposer_prv_key)], [inpt.proposer_prv_key]);\n        let r = {};\n        r.TxID_createDaoProposal = res.transaction_id;\n        r.dao_id = dao_id;\n        const ps = await this.getDaoProposals(Object.assign(Object.assign({}, inpt), { dao_id })); // r.dao_id, inpt.proposer\n        r.proposal_id = ps.rows[ps.rows.length - 1].id;\n        return r;\n    }\n    /**\n     *\n     * @param inpt : NCCreateDaoUserWhitelistProposal\n     * @returns NCReturnTxs.TxID_createDaoProposal, NCReturnTxs.proposal_id\n     */\n    async createDaoUserWhitelistProposal(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        const t = await this.aGen.createWhiteListProposal([{ actor: inpt.proposer, permission: \"active\" }], inpt.proposer, Number(dao_id), inpt.user, inpt.vote_start, inpt.vote_end);\n        const res = await this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.proposer_prv_key)], [inpt.proposer_prv_key]);\n        let r = {};\n        r.TxID_createDaoProposal = res.transaction_id;\n        r.dao_id = dao_id;\n        let ps = await this.getDaoWhitelistProposals(Number(dao_id), inpt.proposer);\n        r.proposal_id = ps.rows[ps.rows.length - 1].id;\n        return r;\n    }\n    /**\n   *\n   * @param inpt : NCApproveDaoProposal\n   * @returns NCReturnTxs.TxID_approveDaoProposal\n   */\n    async approveDaoProposal(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        if (inpt.proposal_id == undefined)\n            throw (\"Proposal undefined ID\");\n        const t = await this.aGen.approveProposal([{ actor: inpt.approver, permission: \"active\" }], Number(dao_id), inpt.proposal_id);\n        const res = await this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.approver_prv_key)], [inpt.approver_prv_key]);\n        let r = {};\n        r.TxID_approveDaoProposal = res.transaction_id;\n        return r;\n    }\n    /**\n     *\n     * @param inpt : NCApproveDaoProposal\n     * @returns NCReturnTxs.TxID_approveDaoProposal\n     */\n    async approveDaoWhitelistProposal(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        if (inpt.proposal_id == undefined)\n            throw (\"Proposal undefined ID\");\n        const t = await this.aGen.approveWhiteListProposal([{ actor: inpt.approver, permission: \"active\" }], Number(dao_id), inpt.proposal_id);\n        const res = await this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.approver_prv_key)], [inpt.approver_prv_key]);\n        let r = {};\n        r.TxID_approveDaoProposal = res.transaction_id;\n        return r;\n    }\n    /**\n     *\n     * @param inpt : NCExecuteDaoProposal\n     * @returns NCReturnTxs.TxID_executeDaoProposal\n     */\n    async executeDaoProposal(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        if (inpt.proposal_id == undefined)\n            throw (\"Proposal ID undefined\");\n        const t = await this.aGen.executeProposal([{ actor: inpt.exec, permission: \"active\" }], Number(dao_id), inpt.proposal_id);\n        const res = await this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.exec_prv_key)], [inpt.exec_prv_key]);\n        let r = {};\n        r.TxID_executeDaoProposal = res.transaction_id;\n        return r;\n    }\n    /**\n     * @param inpt : NCExecuteDaoProposal\n     * @returns NCReturnTxs.TxID_executeDaoProposal\n     */\n    async executeDaoWhitelistProposal(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        if (inpt.proposal_id == undefined)\n            throw (\"Proposal ID undefined\");\n        const t = await this.aGen.executeWhiteListProposal([{ actor: inpt.exec, permission: \"active\" }], Number(dao_id), inpt.proposal_id);\n        const res = await this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.exec_prv_key)], [inpt.exec_prv_key]);\n        let r = {};\n        r.TxID_executeDaoProposal = res.transaction_id;\n        return r;\n    }\n    /**\n     * @param inpt : NCCreateDao\n     * @returns NCReturnTxs.TxID_createDao, NCReturnTxs.dao_id\n     */\n    async voteOnProposal(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        //console.log(\"Vote for DAO proposal\", JSON.stringify(inpt));\n        const t = await this.aGen.vote([{ actor: inpt.voter, permission: \"active\" }], inpt.voter, inpt.quantity, inpt.proposal_type || \"standart\", dao_id, inpt.proposal_id, inpt.option);\n        console.log(\"Vote for DAO proposal: \", JSON.stringify(t));\n        const res = await this.SubmitTx(t, [eosjs_ecc_priveos_1.default.privateToPublic(inpt.voter_prv_key)], [inpt.voter_prv_key]);\n        //console.log(\"received from VoteForDaoProposal\" + JSON.stringify(res));\n        return { TxID_voteDaoProposal: res.transaction_id };\n    }\n    // Getters \n    /**\n     * @param inpt : NCCreateDao\n     * @returns NCReturnTxs.TxID_createDao, NCReturnTxs.dao_id\n     */\n    async getDaoIdByOwner(owner, noFail) {\n        var _a, _b;\n        if (!owner)\n            throw new Error(\"DAO undefined\");\n        let p = { owner: owner };\n        //console.log(\"Get dao by owner: \", JSON.stringify(p));\n        let q = await this.cApi.getDAOByOwner(p);\n        let w = await q.json();\n        //console.log(\"received from getDaoByOwner\" + JSON.stringify(w));\n        if (!w.rows.length && !noFail)\n            throw new Error('User has no dao');\n        const r = (_b = (_a = w.rows[0]) === null || _a === void 0 ? void 0 : _a.id) === null || _b === void 0 ? void 0 : _b.toString();\n        if (!r && !noFail)\n            throw new Error(\"DAO undefined\");\n        return r;\n    }\n    async getDaoWhitelist(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        let q = await this.cApi.getDAOWhiteList({ id: inpt.dao_id });\n        let w = await q.json();\n        return Object.assign(Object.assign({}, w), { dao_id });\n    }\n    async getDaoProposal(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        //if(inpt.proposal_id)  throw \"Must provide proposal ID\";    \n        let w = await (await this.cApi.getProposalByID({ daoID: inpt.dao_id, id: inpt.proposal_id })).json();\n        console.log(\"received from getProposalByID \" + JSON.stringify(w.rows[0]));\n        return Object.assign(Object.assign({}, w), { dao_id });\n    }\n    async getDaoWhitelistProposals(dao_id, proposer) {\n        let p = { daoID: dao_id.toString(), proposer: proposer };\n        //console.log(\"Get proposal by author: \", JSON.stringify(p));\n        let q = await this.cApi.getWhiteListProposalByProposer(p);\n        let w = await q.json();\n        //console.log(\"received from getProposalByOwner\" + JSON.stringify(w));\n        return w;\n    }\n    async getDaoWhitelistProposal(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        if (!inpt.proposal_id)\n            throw \"Must provide proposal ID\";\n        let w = await (await this.cApi.getWhiteListProposal({ daoID: dao_id, id: inpt.proposal_id })).json();\n        console.log(\"received from getProposalByID\" + JSON.stringify(w.rows[0]));\n        return Object.assign(Object.assign({}, w), { dao_id: inpt.dao_id });\n    }\n    async listDaoProposals(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        let opt;\n        if (inpt.proposal_author == undefined)\n            opt = { daoID: inpt.dao_id };\n        else\n            opt = { daoID: inpt.dao_id, proposer: inpt.proposal_author };\n        console.log(\"sent to getProposalByProposer\" + JSON.stringify(opt));\n        let q = await this.cApi.getProposalByProposer(opt);\n        console.log(\"received from getProposalByProposer\" + JSON.stringify(q));\n        let w = q.json().rows;\n        return { list: w, id: inpt.dao_id };\n    }\n    async listDaoWhitelistProposals(inpt) {\n        const dao_id = inpt.dao_id || (await this.getDaoIdByOwner(inpt.dao_owner));\n        let opt;\n        if (!inpt.proposal_author)\n            opt = { daoID: dao_id };\n        else\n            opt = { daoID: dao_id, proposer: inpt.proposal_author };\n        let q = await this.cApi.getWhiteListProposalByProposer(opt);\n        //console.log(\"received from getProposalByProposer\" + JSON.stringify(q));\n        let w = q.json().rows;\n        return { list: w, id: dao_id };\n    }\n    async getProposalVotes(inpt) {\n        let w, q;\n        const r = { owner: inpt.voter };\n        if (inpt.vote_id)\n            r.id = inpt.vote_id;\n        q = (await this.cApi.getVote(r));\n        w = await q.json();\n        //console.log(\"received from getVotes \" + JSON.stringify(w.rows));\n        return w;\n    }\n    /**\n     * Mint an asset\n     * @returns Create Pool transaction id\n     */\n    async mintAsset(inpt) {\n        let d = 12 - inpt.creator.length;\n        if (inpt.col_name == undefined)\n            inpt.col_name = (0, utils_1.normalizeUsername)(inpt.creator, \"z\");\n        if (inpt.sch_name == undefined)\n            inpt.sch_name = (0, utils_1.normalizeUsername)(inpt.creator, \"w\");\n        if (inpt.tmpl_id == undefined)\n            inpt.tmpl_id = -1;\n        if (inpt.immutable_data == undefined)\n            inpt.immutable_data = [\n                { key: 'name', value: ['string', inpt.creator + '_' + (new Date()).getTime()] }\n            ];\n        if (inpt.mutable_data == undefined)\n            inpt.mutable_data = [];\n        const t = this.sdkGen.mintAsset(inpt.creator, inpt.payer, inpt.col_name, inpt.sch_name, inpt.tmpl_id, inpt.immutable_data, inpt.mutable_data);\n        let res = await this.SubmitTx([t], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\n        let r = {};\n        r.TxID_mintAsset = res.transaction_id;\n        return r;\n    }\n    /**\n     * Get account balance\n     * @param acc: NCGetAccInfo\n     * @param acc.token_name will set correct contract\n     * @returns Tx data\n     */\n    async getAccountBalance(acc) {\n        if (!acc.contract) {\n            if (acc.token_name == \"GNCO\")\n                acc.contract = this.services.maindao_contract;\n            else if (acc.token_name != \"NCO\")\n                acc.contract = this.services.staking_contract;\n            else\n                acc.contract = this.services.eosio_contract;\n        }\n        let rc = { acc_balances: [] };\n        try {\n            let t = await (0, cross_fetch_1.default)(`https://nodeos-dev.newcoin.org/v1/chain/get_currency_balance`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    account: acc.owner,\n                    code: acc.contract\n                }),\n            });\n            rc.acc_balances = await t.json();\n            //console.log(rc);\n            return rc;\n        }\n        catch (e) {\n            console.log('\\nCaught exception: ' + e);\n            if (e instanceof eosjs_1.RpcError)\n                console.log(JSON.stringify(e.json, null, 2));\n        }\n    }\n    /**\n     * Transfer GNCO between accounts\n     * @param NCTxBal\n     * @returns Transfer transaction id\n     */\n    async txGNCOBalance(inpt) {\n        const r = await this._txBalance(this.services.maindao_contract, inpt);\n        return r;\n    }\n    /**\n     * Transfer NCO between accounts\n     * @param NCTxBal\n     * @returns Transfer transaction id\n     */\n    async txNCOBalance(inpt) {\n        const r = await this._txBalance(this.services.token_contract, inpt);\n        return r;\n    }\n    /**\n     * Transfer creator tokens between accounts\n     * @param   NCTxBal\n     * @returns Transfer transaction id\n     */\n    async txDAOTokenBalance(inpt) {\n        const r = await this._txBalance(this.services.staking_contract, inpt);\n        return r;\n    }\n    /**\n   * Get pool info\n   * @param\n   * @returns Tx data\n   */\n    async getPoolInfo(payload) {\n        const api = new newcoin_pools_js_1.RpcApi(\"https://nodeos-dev.newcoin.org\", \"pools2.nco\", cross_fetch_1.default); // TODO\n        try {\n            const fn = payload.code ? \"getPoolByCode\" : \"getPoolByOwner\";\n            let q = await api[fn](payload);\n            let t = await q.json();\n            return t;\n        }\n        catch (e) {\n            console.log('\\nCaught exception: ' + e);\n            if (e instanceof eosjs_1.RpcError)\n                console.log(JSON.stringify(e.json, null, 2));\n        }\n        return {};\n        ``;\n    }\n    /**\n     * Get trasaction data\n     * @returns Tx data\n     */\n    async getTxData(txid) {\n        let txi = await this.hrpc.get_transaction(txid);\n        console.log(txi); // get template number  txi.actions[1].act.data.template_id\n        return txi;\n    }\n    // AUX functions\n    /**\n     * Transfer NCO between accounts\n     * @returns Transfer transaction id\n     */\n    async _txBalance(contract, inpt) {\n        var _a;\n        let r = {};\n        let tx = this.sdkGen.txBalance(contract, inpt.payer, inpt.to, inpt.amt, (_a = inpt.memo) !== null && _a !== void 0 ? _a : (inpt.memo = \"\"));\n        let res = await this.SubmitTx([tx], [eosjs_ecc_priveos_1.default.privateToPublic(inpt.payer_prv_key)], [inpt.payer_prv_key]);\n        r.TxID = res.transaction_id;\n        return r;\n    }\n    async SubmitTx(actions, public_keys, // testnet [\"EOS5PU92CupzxWEuvTMcCNr3G69r4Vch3bmYDrczNSHx5LbNRY7NT\"]\n    private_keys // testnet [\"5KdRwMUrkFssK2nUXASnhzjsN1rNNiy8bXAJoHYbBgJMLzjiXHV\"]\n    ) {\n        const signatureProvider = new eosjs_jssig_1.JsSignatureProvider(private_keys);\n        signatureProvider.availableKeys = public_keys;\n        //@ts-ignore\n        const rpc = this.nodeos_rpc;\n        const api = new eosjs_1.Api({ rpc, signatureProvider }); //required to submit transactions\n        const info = await rpc.get_info();\n        const lastBlockInfo = await rpc.get_block(info.last_irreversible_block_num);\n        const tzOff = new Date(info.head_block_time).getTimezoneOffset();\n        var t = new Date((new Date(info.head_block_time)).getTime() + 10 * 60 * 1000 - tzOff * 1000 * 60).toISOString().slice(0, -1); //+10m\n        const transactionObj = {\n            actions: actions,\n            expiration: t,\n            ref_block_prefix: lastBlockInfo.ref_block_prefix,\n            ref_block_num: lastBlockInfo.block_num & 0xffff, // 22774\n        };\n        const a = await api.serializeActions(transactionObj.actions);\n        const transaction = Object.assign(Object.assign({}, transactionObj), { actions: a });\n        const serializedTransaction = api.serializeTransaction(transaction);\n        const availableKeys = await api.signatureProvider.getAvailableKeys();\n        const requiredKeys = await api.authorityProvider.getRequiredKeys({ transaction, availableKeys });\n        const abis = await api.getTransactionAbis(transaction);\n        // const pushTransactionArgs: PushTransactionArgs = { serializedTransaction, signatures };\n        const pushTransactionArgs = await api.signatureProvider.sign({\n            chainId: info.chain_id,\n            requiredKeys: requiredKeys,\n            serializedTransaction: serializedTransaction,\n            serializedContextFreeData: undefined,\n            abis: abis\n        });\n        //console.log(\"signed transaction: \" + JSON.stringify(pushTransactionArgs));\n        /*\n        let tr  = serializedTransaction.buffer.toString();\n        let eccst = ecc.sign(serializedTransaction, private_keys[0]);\n        let pub_from_prv = ecc.privateToPublic(private_keys[0]);\n        let sig = pushTransactionArgs.signatures[0];\n        let key = ecc.recover(sig, tr);\n        let c = ecc.verify(sig, tr, public_keys[0]);\n        console.log(\"signature verification: return %d\", c)*/\n        return api.pushSignedTransaction(pushTransactionArgs);\n    }\n    ;\n}\nexports.NCO_BlockchainAPI = NCO_BlockchainAPI;\nNCO_BlockchainAPI.defaults = {\n    devnet_services: exports.devnet_services,\n    devnet_urls: exports.devnet_urls,\n    default_schema: types_1.default_schema\n};\n\n\n/***/ }),\n\n/***/ \"./dist/types.js\":\n/*!***********************!*\\\n  !*** ./dist/types.js ***!\n  \\***********************/\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ERC721_schema = exports.default_schema = void 0;\nexports.default_schema = [\n    { name: 'name', type: \"string\" },\n    { name: 'description', type: \"string\" },\n    { name: 'image', type: 'string' },\n    { name: 'external_url', type: 'string' },\n    { name: 'content_type', type: 'string' },\n    { name: 'content', type: 'string' },\n    { name: 'license', type: 'string' }\n];\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\nexports.ERC721_schema = [\n    { name: 'name', type: \"string\" },\n    { name: 'description', type: \"string\" },\n    { name: 'image', type: 'string' },\n];\n// https://docs.opensea.io/docs/metadata-standards\n// export const OpenSea_schema = [\n//]\n\n\n/***/ }),\n\n/***/ \"./dist/utils.js\":\n/*!***********************!*\\\n  !*** ./dist/utils.js ***!\n  \\***********************/\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normalizeUsername = void 0;\nconst normalizeUsername = (username, r) => {\n    return username.replace(/\\./g, r + r.repeat(12 - username.length));\n};\nexports.normalizeUsername = normalizeUsername;\n\n\n/***/ }),\n\n/***/ \"@eoscafe/hyperion\":\n/*!************************************!*\\\n  !*** external \"@eoscafe/hyperion\" ***!\n  \\************************************/\n/***/ ((module) => {\n\nmodule.exports = __nested_webpack_require_231__(/*! @eoscafe/hyperion */ \"@eoscafe/hyperion\");\n\n/***/ }),\n\n/***/ \"@newcoin-foundation/newcoin.daos-js\":\n/*!******************************************************!*\\\n  !*** external \"@newcoin-foundation/newcoin.daos-js\" ***!\n  \\******************************************************/\n/***/ ((module) => {\n\nmodule.exports = __nested_webpack_require_231__(/*! @newcoin-foundation/newcoin.daos-js */ \"@newcoin-foundation/newcoin.daos-js\");\n\n/***/ }),\n\n/***/ \"@newcoin-foundation/newcoin.pool-js\":\n/*!******************************************************!*\\\n  !*** external \"@newcoin-foundation/newcoin.pool-js\" ***!\n  \\******************************************************/\n/***/ ((module) => {\n\nmodule.exports = __nested_webpack_require_231__(/*! @newcoin-foundation/newcoin.pool-js */ \"@newcoin-foundation/newcoin.pool-js\");\n\n/***/ }),\n\n/***/ \"@newcoin-foundation/newcoin.pools-js/\":\n/*!********************************************************!*\\\n  !*** external \"@newcoin-foundation/newcoin.pools-js/\" ***!\n  \\********************************************************/\n/***/ ((module) => {\n\nmodule.exports = __nested_webpack_require_231__(/*! @newcoin-foundation/newcoin.pools-js/ */ \"@newcoin-foundation/newcoin.pools-js/\");\n\n/***/ }),\n\n/***/ \"cross-fetch\":\n/*!******************************!*\\\n  !*** external \"cross-fetch\" ***!\n  \\******************************/\n/***/ ((module) => {\n\nmodule.exports = __nested_webpack_require_231__(/*! cross-fetch */ \"cross-fetch\");\n\n/***/ }),\n\n/***/ \"eosjs\":\n/*!************************!*\\\n  !*** external \"eosjs\" ***!\n  \\************************/\n/***/ ((module) => {\n\nmodule.exports = __nested_webpack_require_231__(/*! eosjs */ \"eosjs\");\n\n/***/ }),\n\n/***/ \"eosjs-ecc-priveos\":\n/*!************************************!*\\\n  !*** external \"eosjs-ecc-priveos\" ***!\n  \\************************************/\n/***/ ((module) => {\n\nmodule.exports = __nested_webpack_require_231__(/*! eosjs-ecc-priveos */ \"eosjs-ecc-priveos\");\n\n/***/ }),\n\n/***/ \"eosjs/dist/eosjs-jssig\":\n/*!*****************************************!*\\\n  !*** external \"eosjs/dist/eosjs-jssig\" ***!\n  \\*****************************************/\n/***/ ((module) => {\n\nmodule.exports = __nested_webpack_require_231__(/*! eosjs/dist/eosjs-jssig */ \"eosjs/dist/eosjs-jssig\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_45146__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_45146__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \tvar __webpack_exports__ = __nested_webpack_require_45146__(\"./dist/index.js\");\n/******/ \tmodule.exports.NCO_BlockchainAPI = __webpack_exports__.NCO_BlockchainAPI;\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"@eoscafe/hyperion\":\n/*!************************************!*\\\n  !*** external \"@eoscafe/hyperion\" ***!\n  \\************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __webpack_require__(/*! @eoscafe/hyperion */ \"@eoscafe/hyperion\");\n\n/***/ }),\n\n/***/ \"@newcoin-foundation/newcoin.daos-js\":\n/*!******************************************************!*\\\n  !*** external \"@newcoin-foundation/newcoin.daos-js\" ***!\n  \\******************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __webpack_require__(/*! @newcoin-foundation/newcoin.daos-js */ \"@newcoin-foundation/newcoin.daos-js\");\n\n/***/ }),\n\n/***/ \"@newcoin-foundation/newcoin.pool-js\":\n/*!******************************************************!*\\\n  !*** external \"@newcoin-foundation/newcoin.pool-js\" ***!\n  \\******************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __webpack_require__(/*! @newcoin-foundation/newcoin.pool-js */ \"@newcoin-foundation/newcoin.pool-js\");\n\n/***/ }),\n\n/***/ \"@newcoin-foundation/newcoin.pools-js/\":\n/*!********************************************************!*\\\n  !*** external \"@newcoin-foundation/newcoin.pools-js/\" ***!\n  \\********************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __webpack_require__(/*! @newcoin-foundation/newcoin.pools-js/ */ \"@newcoin-foundation/newcoin.pools-js/\");\n\n/***/ }),\n\n/***/ \"cross-fetch\":\n/*!******************************!*\\\n  !*** external \"cross-fetch\" ***!\n  \\******************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __webpack_require__(/*! cross-fetch */ \"cross-fetch\");\n\n/***/ }),\n\n/***/ \"eosjs\":\n/*!************************!*\\\n  !*** external \"eosjs\" ***!\n  \\************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __webpack_require__(/*! eosjs */ \"eosjs\");\n\n/***/ }),\n\n/***/ \"eosjs-ecc-priveos\":\n/*!************************************!*\\\n  !*** external \"eosjs-ecc-priveos\" ***!\n  \\************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __webpack_require__(/*! eosjs-ecc-priveos */ \"eosjs-ecc-priveos\");\n\n/***/ }),\n\n/***/ \"eosjs/dist/eosjs-jssig\":\n/*!*****************************************!*\\\n  !*** external \"eosjs/dist/eosjs-jssig\" ***!\n  \\*****************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __webpack_require__(/*! eosjs/dist/eosjs-jssig */ \"eosjs/dist/eosjs-jssig\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_49571__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_49571__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module used 'module' so it can't be inlined\n/******/ \tvar __webpack_exports__ = __nested_webpack_require_49571__(\"./dist/index.js\");\n/******/ \tmodule.exports.NCO_BlockchainAPI = __webpack_exports__.NCO_BlockchainAPI;\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ \"@eoscafe/hyperion\":\n/*!************************************!*\\\n  !*** external \"@eoscafe/hyperion\" ***!\n  \\************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@eoscafe/hyperion\");\n\n/***/ }),\n\n/***/ \"@newcoin-foundation/newcoin.daos-js\":\n/*!******************************************************!*\\\n  !*** external \"@newcoin-foundation/newcoin.daos-js\" ***!\n  \\******************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@newcoin-foundation/newcoin.daos-js\");\n\n/***/ }),\n\n/***/ \"@newcoin-foundation/newcoin.pool-js\":\n/*!******************************************************!*\\\n  !*** external \"@newcoin-foundation/newcoin.pool-js\" ***!\n  \\******************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@newcoin-foundation/newcoin.pool-js\");\n\n/***/ }),\n\n/***/ \"@newcoin-foundation/newcoin.pools-js/\":\n/*!********************************************************!*\\\n  !*** external \"@newcoin-foundation/newcoin.pools-js/\" ***!\n  \\********************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@newcoin-foundation/newcoin.pools-js/\");\n\n/***/ }),\n\n/***/ \"cross-fetch\":\n/*!******************************!*\\\n  !*** external \"cross-fetch\" ***!\n  \\******************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"cross-fetch\");\n\n/***/ }),\n\n/***/ \"eosjs\":\n/*!************************!*\\\n  !*** external \"eosjs\" ***!\n  \\************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"eosjs\");\n\n/***/ }),\n\n/***/ \"eosjs-ecc-priveos\":\n/*!************************************!*\\\n  !*** external \"eosjs-ecc-priveos\" ***!\n  \\************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"eosjs-ecc-priveos\");\n\n/***/ }),\n\n/***/ \"eosjs/dist/eosjs-jssig\":\n/*!*****************************************!*\\\n  !*** external \"eosjs/dist/eosjs-jssig\" ***!\n  \\*****************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"eosjs/dist/eosjs-jssig\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module used 'module' so it can't be inlined\n/******/ \tvar __webpack_exports__ = __webpack_require__(\"./dist/index.js\");\n/******/ \tmodule.exports.NCO_BlockchainAPI = __webpack_exports__.NCO_BlockchainAPI;\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=index.js.map","module.exports = require(\"@eoscafe/hyperion\");","module.exports = require(\"@newcoin-foundation/newcoin.daos-js\");","module.exports = require(\"@newcoin-foundation/newcoin.pool-js\");","module.exports = require(\"@newcoin-foundation/newcoin.pools-js/\");","module.exports = require(\"cross-fetch\");","module.exports = require(\"eosjs\");","module.exports = require(\"eosjs-ecc-priveos\");","module.exports = require(\"eosjs/dist/eosjs-jssig\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./dist/index.js\");\n",""],"names":[],"sourceRoot":""}